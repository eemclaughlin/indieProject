[DEBUG] 2022-10-01 11:51:26.259 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-10-01 11:51:26.271 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-10-01 11:51:26.277 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-10-01 11:51:26.380 [http-nio-8080-exec-5] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2022-10-01 11:51:26.382 [http-nio-8080-exec-5] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2022-10-01 11:51:26.598 [http-nio-8080-exec-5] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2022-10-01 11:51:26.599 [http-nio-8080-exec-5] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2022-10-01 11:51:26.601 [http-nio-8080-exec-5] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2022-10-01 11:51:27.951 [http-nio-8080-exec-5] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-10-01 11:51:27.971 [http-nio-8080-exec-5] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-10-01 11:51:27.972 [http-nio-8080-exec-5] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-10-01 11:51:27.997 [http-nio-8080-exec-5] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2022-10-01 11:51:28.035 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2679641b
[DEBUG] 2022-10-01 11:51:28.035 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2679641b
[DEBUG] 2022-10-01 11:51:28.035 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2679641b
[DEBUG] 2022-10-01 11:51:28.036 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ca7f177
[DEBUG] 2022-10-01 11:51:28.036 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2865fed2
[DEBUG] 2022-10-01 11:51:28.037 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6af2cbd
[DEBUG] 2022-10-01 11:51:28.038 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6dc024b4
[DEBUG] 2022-10-01 11:51:28.038 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6dc024b4
[DEBUG] 2022-10-01 11:51:28.038 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6dc024b4
[DEBUG] 2022-10-01 11:51:28.039 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@12019b9a
[DEBUG] 2022-10-01 11:51:28.039 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@12019b9a
[DEBUG] 2022-10-01 11:51:28.039 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@12019b9a
[DEBUG] 2022-10-01 11:51:28.040 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1001613
[DEBUG] 2022-10-01 11:51:28.040 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1001613
[DEBUG] 2022-10-01 11:51:28.040 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1001613
[DEBUG] 2022-10-01 11:51:28.041 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5ac16bce
[DEBUG] 2022-10-01 11:51:28.041 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5ac16bce
[DEBUG] 2022-10-01 11:51:28.042 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5ac16bce
[DEBUG] 2022-10-01 11:51:28.042 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7299eaf0
[DEBUG] 2022-10-01 11:51:28.043 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7299eaf0
[DEBUG] 2022-10-01 11:51:28.043 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7299eaf0
[DEBUG] 2022-10-01 11:51:28.044 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1812802c
[DEBUG] 2022-10-01 11:51:28.044 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1812802c
[DEBUG] 2022-10-01 11:51:28.044 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1812802c
[DEBUG] 2022-10-01 11:51:28.045 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@48afe822
[DEBUG] 2022-10-01 11:51:28.045 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@48afe822
[DEBUG] 2022-10-01 11:51:28.045 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@48afe822
[DEBUG] 2022-10-01 11:51:28.046 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@cc6fbe
[DEBUG] 2022-10-01 11:51:28.046 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@cc6fbe
[DEBUG] 2022-10-01 11:51:28.047 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7e4c5c40
[DEBUG] 2022-10-01 11:51:28.047 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7e4c5c40
[DEBUG] 2022-10-01 11:51:28.048 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@572914fe
[DEBUG] 2022-10-01 11:51:28.048 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@572914fe
[DEBUG] 2022-10-01 11:51:28.049 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3508579a
[DEBUG] 2022-10-01 11:51:28.049 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@a2722a9
[DEBUG] 2022-10-01 11:51:28.050 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@16cad9cd
[DEBUG] 2022-10-01 11:51:28.050 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@16cad9cd
[DEBUG] 2022-10-01 11:51:28.052 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4d3a653b
[DEBUG] 2022-10-01 11:51:28.053 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4d3a653b
[DEBUG] 2022-10-01 11:51:28.059 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4fd8ac1c
[DEBUG] 2022-10-01 11:51:28.059 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4fd8ac1c
[DEBUG] 2022-10-01 11:51:28.061 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10405ce4
[DEBUG] 2022-10-01 11:51:28.061 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10405ce4
[DEBUG] 2022-10-01 11:51:28.062 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@8cd1d15
[DEBUG] 2022-10-01 11:51:28.062 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@8cd1d15
[DEBUG] 2022-10-01 11:51:28.063 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7bf654c2
[DEBUG] 2022-10-01 11:51:28.063 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7bf654c2
[DEBUG] 2022-10-01 11:51:28.065 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28f42be
[DEBUG] 2022-10-01 11:51:28.065 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@28f42be
[DEBUG] 2022-10-01 11:51:28.066 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@73276299
[DEBUG] 2022-10-01 11:51:28.066 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@73276299
[DEBUG] 2022-10-01 11:51:28.078 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4eb3f9ba
[DEBUG] 2022-10-01 11:51:28.078 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4eb3f9ba
[DEBUG] 2022-10-01 11:51:28.080 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6106895e
[DEBUG] 2022-10-01 11:51:28.080 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6106895e
[DEBUG] 2022-10-01 11:51:28.081 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@14cb6064
[DEBUG] 2022-10-01 11:51:28.081 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@14cb6064
[DEBUG] 2022-10-01 11:51:28.082 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@128b3cf
[DEBUG] 2022-10-01 11:51:28.082 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@128b3cf
[DEBUG] 2022-10-01 11:51:28.082 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@128b3cf
[DEBUG] 2022-10-01 11:51:28.085 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@778e7d8e
[DEBUG] 2022-10-01 11:51:28.086 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2eb667a
[DEBUG] 2022-10-01 11:51:28.087 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2eb667a
[DEBUG] 2022-10-01 11:51:28.087 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2eb667a
[DEBUG] 2022-10-01 11:51:28.087 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@367c6141
[DEBUG] 2022-10-01 11:51:28.088 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@63426b53
[DEBUG] 2022-10-01 11:51:28.088 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@63426b53
[DEBUG] 2022-10-01 11:51:28.089 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@105f7a1
[DEBUG] 2022-10-01 11:51:28.089 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@105f7a1
[DEBUG] 2022-10-01 11:51:28.090 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@519af0ea
[DEBUG] 2022-10-01 11:51:28.090 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@519af0ea
[DEBUG] 2022-10-01 11:51:28.091 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5f0d0bf8
[DEBUG] 2022-10-01 11:51:28.091 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f0d0bf8
[DEBUG] 2022-10-01 11:51:28.092 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@775acdd1
[DEBUG] 2022-10-01 11:51:28.092 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@775acdd1
[DEBUG] 2022-10-01 11:51:28.092 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7854124d
[DEBUG] 2022-10-01 11:51:28.093 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@47d1b123
[DEBUG] 2022-10-01 11:51:28.093 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@47d1b123
[DEBUG] 2022-10-01 11:51:28.094 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@47d1b123
[DEBUG] 2022-10-01 11:51:28.095 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@13ef7ee8
[DEBUG] 2022-10-01 11:51:28.095 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@13ef7ee8
[DEBUG] 2022-10-01 11:51:28.095 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@13ef7ee8
[DEBUG] 2022-10-01 11:51:28.096 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@516af449
[DEBUG] 2022-10-01 11:51:28.096 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7da1ed7e
[DEBUG] 2022-10-01 11:51:28.097 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@243c3fcb
[DEBUG] 2022-10-01 11:51:28.097 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@243c3fcb
[DEBUG] 2022-10-01 11:51:28.097 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@243c3fcb
[DEBUG] 2022-10-01 11:51:28.098 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7327d9e3
[DEBUG] 2022-10-01 11:51:28.098 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7327d9e3
[DEBUG] 2022-10-01 11:51:28.098 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7327d9e3
[DEBUG] 2022-10-01 11:51:28.099 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6b1ff4a4
[DEBUG] 2022-10-01 11:51:28.099 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1550740a
[DEBUG] 2022-10-01 11:51:28.100 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7331216c
[DEBUG] 2022-10-01 11:51:28.100 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7331216c
[DEBUG] 2022-10-01 11:51:28.101 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5432d003
[DEBUG] 2022-10-01 11:51:28.102 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@21cd5343
[DEBUG] 2022-10-01 11:51:28.102 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21cd5343
[DEBUG] 2022-10-01 11:51:28.103 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5b7a8aa5
[DEBUG] 2022-10-01 11:51:28.104 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5b7a8aa5
[DEBUG] 2022-10-01 11:51:28.104 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@40c58254
[DEBUG] 2022-10-01 11:51:28.104 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4f19e0b
[DEBUG] 2022-10-01 11:51:28.106 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@47890af9
[DEBUG] 2022-10-01 11:51:28.108 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@436b39bd
[DEBUG] 2022-10-01 11:51:28.109 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@436b39bd
[DEBUG] 2022-10-01 11:51:28.109 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5791a9c0
[DEBUG] 2022-10-01 11:51:28.109 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1804b360
[DEBUG] 2022-10-01 11:51:28.109 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2678198e
[DEBUG] 2022-10-01 11:51:28.109 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5ce87c7
[DEBUG] 2022-10-01 11:51:28.109 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5f4be117
[DEBUG] 2022-10-01 11:51:28.109 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6269d62d
[DEBUG] 2022-10-01 11:51:28.110 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@43b0787
[DEBUG] 2022-10-01 11:51:28.110 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@753a5878
[DEBUG] 2022-10-01 11:51:28.141 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-10-01 11:51:28.142 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-10-01 11:51:28.143 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-10-01 11:51:28.143 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-10-01 11:51:28.143 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-10-01 11:51:28.144 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-10-01 11:51:28.145 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-10-01 11:51:28.146 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-10-01 11:51:28.147 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-10-01 11:51:28.147 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-10-01 11:51:28.148 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-10-01 11:51:28.148 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-10-01 11:51:28.148 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-10-01 11:51:28.149 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2022-10-01 11:51:28.154 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/RecipeTracker
[INFO ] 2022-10-01 11:51:28.154 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2022-10-01 11:51:28.154 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2022-10-01 11:51:28.321 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2022-10-01 11:51:29.517 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2022-10-01 11:51:29.517 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2022-10-01 11:51:29.517 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-10-01 11:51:29.701 [http-nio-8080-exec-5] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2022-10-01 11:51:29.730 [http-nio-8080-exec-5] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2022-10-01 11:51:29.983 [http-nio-8080-exec-5] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2022-10-01 11:51:30.072 [http-nio-8080-exec-5] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-10-01 11:51:30.077 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20d74004] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1728b88f]
[DEBUG] 2022-10-01 11:51:30.138 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.ericmclaughlin.entity.Recipe
[DEBUG] 2022-10-01 11:51:30.161 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-10-01 11:51:30.168 [http-nio-8080-exec-5] EntityBinder - Import with entity name Recipe
[DEBUG] 2022-10-01 11:51:30.171 [http-nio-8080-exec-5] EntityBinder - Bind entity com.ericmclaughlin.entity.Recipe on table recipes
[DEBUG] 2022-10-01 11:51:30.195 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=recipe_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.199 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property recipeId with lazy=false
[DEBUG] 2022-10-01 11:51:30.208 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.Recipe:recipeId]
[DEBUG] 2022-10-01 11:51:30.210 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for recipeId
[DEBUG] 2022-10-01 11:51:30.212 [http-nio-8080-exec-5] PropertyBinder - Building property recipeId
[DEBUG] 2022-10-01 11:51:30.217 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(recipe_id)]), recipeId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2022-10-01 11:51:30.220 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.220 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-10-01 11:51:30.221 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.Recipe:description]
[DEBUG] 2022-10-01 11:51:30.221 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-10-01 11:51:30.221 [http-nio-8080-exec-5] PropertyBinder - Building property description
[DEBUG] 2022-10-01 11:51:30.221 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=notes, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.221 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property notes with lazy=false
[DEBUG] 2022-10-01 11:51:30.221 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.Recipe:notes]
[DEBUG] 2022-10-01 11:51:30.222 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for notes
[DEBUG] 2022-10-01 11:51:30.222 [http-nio-8080-exec-5] PropertyBinder - Building property notes
[DEBUG] 2022-10-01 11:51:30.222 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=recipe_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.222 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property recipeName with lazy=false
[DEBUG] 2022-10-01 11:51:30.222 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.Recipe:recipeName]
[DEBUG] 2022-10-01 11:51:30.222 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for recipeName
[DEBUG] 2022-10-01 11:51:30.222 [http-nio-8080-exec-5] PropertyBinder - Building property recipeName
[DEBUG] 2022-10-01 11:51:30.224 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_cd', referencedColumn='', mappedBy=''}
[DEBUG] 2022-10-01 11:51:30.224 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.227 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2022-10-01 11:51:30.228 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.ericmclaughlin.entity.User
[DEBUG] 2022-10-01 11:51:30.228 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-10-01 11:51:30.229 [http-nio-8080-exec-5] EntityBinder - Import with entity name User
[DEBUG] 2022-10-01 11:51:30.229 [http-nio-8080-exec-5] EntityBinder - Bind entity com.ericmclaughlin.entity.User on table user
[DEBUG] 2022-10-01 11:51:30.232 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.232 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2022-10-01 11:51:30.232 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.User:userId]
[DEBUG] 2022-10-01 11:51:30.232 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2022-10-01 11:51:30.232 [http-nio-8080-exec-5] PropertyBinder - Building property userId
[DEBUG] 2022-10-01 11:51:30.232 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2022-10-01 11:51:30.233 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.233 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2022-10-01 11:51:30.233 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.User:firstName]
[DEBUG] 2022-10-01 11:51:30.233 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2022-10-01 11:51:30.233 [http-nio-8080-exec-5] PropertyBinder - Building property firstName
[DEBUG] 2022-10-01 11:51:30.233 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.233 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2022-10-01 11:51:30.234 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.User:lastName]
[DEBUG] 2022-10-01 11:51:30.234 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2022-10-01 11:51:30.234 [http-nio-8080-exec-5] PropertyBinder - Building property lastName
[DEBUG] 2022-10-01 11:51:30.234 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.234 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-10-01 11:51:30.234 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.User:password]
[DEBUG] 2022-10-01 11:51:30.234 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-10-01 11:51:30.234 [http-nio-8080-exec-5] PropertyBinder - Building property password
[DEBUG] 2022-10-01 11:51:30.235 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2022-10-01 11:51:30.235 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.237 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.244 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.245 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.245 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2022-10-01 11:51:30.246 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2022-10-01 11:51:30.246 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2022-10-01 11:51:30.247 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-01 11:51:30.248 [http-nio-8080-exec-5] PropertyBinder - Building property recipes
[DEBUG] 2022-10-01 11:51:30.249 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-01 11:51:30.249 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2022-10-01 11:51:30.249 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.User:userName]
[DEBUG] 2022-10-01 11:51:30.249 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2022-10-01 11:51:30.249 [http-nio-8080-exec-5] PropertyBinder - Building property userName
[DEBUG] 2022-10-01 11:51:30.253 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for recipeId
[DEBUG] 2022-10-01 11:51:30.253 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-10-01 11:51:30.253 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for notes
[DEBUG] 2022-10-01 11:51:30.253 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for recipeName
[DEBUG] 2022-10-01 11:51:30.253 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2022-10-01 11:51:30.254 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2022-10-01 11:51:30.254 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2022-10-01 11:51:30.254 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-10-01 11:51:30.254 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2022-10-01 11:51:30.263 [http-nio-8080-exec-5] PrimaryKey - Forcing column [recipe_id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2022-10-01 11:51:30.263 [http-nio-8080-exec-5] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2022-10-01 11:51:30.264 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-01 11:51:30.264 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.ericmclaughlin.entity.User.recipes through a foreign key
[DEBUG] 2022-10-01 11:51:30.265 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.ericmclaughlin.entity.User.recipes -> recipes
[DEBUG] 2022-10-01 11:51:30.266 [http-nio-8080-exec-5] TableBinder - Retrieving property com.ericmclaughlin.entity.Recipe.user
[DEBUG] 2022-10-01 11:51:30.266 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user_cd, one-to-many: com.ericmclaughlin.entity.Recipe
[DEBUG] 2022-10-01 11:51:30.267 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.ericmclaughlin.entity.User
[DEBUG] 2022-10-01 11:51:30.269 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.ericmclaughlin.entity.User
[DEBUG] 2022-10-01 11:51:30.409 [http-nio-8080-exec-5] SessionFactoryImpl - Building session factory
[DEBUG] 2022-10-01 11:51:30.411 [http-nio-8080-exec-5] Settings - SessionFactory name : null
[DEBUG] 2022-10-01 11:51:30.411 [http-nio-8080-exec-5] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-10-01 11:51:30.411 [http-nio-8080-exec-5] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-10-01 11:51:30.412 [http-nio-8080-exec-5] Settings - Statistics: disabled
[DEBUG] 2022-10-01 11:51:30.412 [http-nio-8080-exec-5] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-10-01 11:51:30.412 [http-nio-8080-exec-5] Settings - Default entity-mode: pojo
[DEBUG] 2022-10-01 11:51:30.412 [http-nio-8080-exec-5] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-10-01 11:51:30.412 [http-nio-8080-exec-5] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-10-01 11:51:30.412 [http-nio-8080-exec-5] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-10-01 11:51:30.413 [http-nio-8080-exec-5] Settings - Default batch fetch size: -1
[DEBUG] 2022-10-01 11:51:30.413 [http-nio-8080-exec-5] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2022-10-01 11:51:30.413 [http-nio-8080-exec-5] Settings - Default null ordering: NONE
[DEBUG] 2022-10-01 11:51:30.413 [http-nio-8080-exec-5] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-10-01 11:51:30.414 [http-nio-8080-exec-5] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-10-01 11:51:30.415 [http-nio-8080-exec-5] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-10-01 11:51:30.417 [http-nio-8080-exec-5] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-10-01 11:51:30.419 [http-nio-8080-exec-5] Settings - Query language substitutions: {}
[DEBUG] 2022-10-01 11:51:30.420 [http-nio-8080-exec-5] Settings - Named query checking : enabled
[DEBUG] 2022-10-01 11:51:30.420 [http-nio-8080-exec-5] Settings - Second-level cache: disabled
[DEBUG] 2022-10-01 11:51:30.420 [http-nio-8080-exec-5] Settings - Second-level query cache: disabled
[DEBUG] 2022-10-01 11:51:30.420 [http-nio-8080-exec-5] Settings - Second-level query cache factory: null
[DEBUG] 2022-10-01 11:51:30.421 [http-nio-8080-exec-5] Settings - Second-level cache region prefix: null
[DEBUG] 2022-10-01 11:51:30.421 [http-nio-8080-exec-5] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-10-01 11:51:30.421 [http-nio-8080-exec-5] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-10-01 11:51:30.421 [http-nio-8080-exec-5] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-10-01 11:51:30.421 [http-nio-8080-exec-5] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-10-01 11:51:30.421 [http-nio-8080-exec-5] Settings - JDBC batch size: 15
[DEBUG] 2022-10-01 11:51:30.421 [http-nio-8080-exec-5] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-10-01 11:51:30.421 [http-nio-8080-exec-5] Settings - Scrollable result sets: enabled
[DEBUG] 2022-10-01 11:51:30.421 [http-nio-8080-exec-5] Settings - Wrap result sets: disabled
[DEBUG] 2022-10-01 11:51:30.421 [http-nio-8080-exec-5] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-10-01 11:51:30.421 [http-nio-8080-exec-5] Settings - JDBC result set fetch size: null
[DEBUG] 2022-10-01 11:51:30.421 [http-nio-8080-exec-5] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-10-01 11:51:30.421 [http-nio-8080-exec-5] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-10-01 11:51:30.422 [http-nio-8080-exec-5] Settings - JPA compliance - query : 
[DEBUG] 2022-10-01 11:51:30.422 [http-nio-8080-exec-5] Settings - JPA compliance - closed-handling : 
[DEBUG] 2022-10-01 11:51:30.422 [http-nio-8080-exec-5] Settings - JPA compliance - lists : 
[DEBUG] 2022-10-01 11:51:30.422 [http-nio-8080-exec-5] Settings - JPA compliance - transactions : 
[INFO ] 2022-10-01 11:51:30.672 [http-nio-8080-exec-5] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2022-10-01 11:51:30.722 [http-nio-8080-exec-5] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-10-01 11:51:30.722 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-07-19, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2022.2/tomcat/468a916e-ca92-405c-8032-b38cf9b60bb8/jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, server.loader=, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2022.2/tomcat/468a916e-ca92-405c-8032-b38cf9b60bb8/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2022.2/tomcat/468a916e-ca92-405c-8032-b38cf9b60bb8/jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.16+8-post-Ubuntu-0ubuntu120.04, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=student, path.separator=:, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-126-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/RecipeTracker, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=/home/student/tomcat, com.sun.management.jmxremote.port=1099, java.version=11.0.16, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=/home/student/tomcat/bin, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2022.2/tomcat/468a916e-ca92-405c-8032-b38cf9b60bb8, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@36aa1d2c, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.16+8-post-Ubuntu-0ubuntu120.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/RecipeTracker, java.class.version=55.0}
[DEBUG] 2022-10-01 11:51:30.842 [http-nio-8080-exec-5] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2022-10-01 11:51:30.842 [http-nio-8080-exec-5] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-10-01 11:51:30.843 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-10-01 11:51:30.843 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20d74004] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@49a17c95]
[DEBUG] 2022-10-01 11:51:31.242 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.ericmclaughlin.entity.User] is safe
[DEBUG] 2022-10-01 11:51:31.242 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.ericmclaughlin.entity.User
[DEBUG] 2022-10-01 11:51:31.323 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.ericmclaughlin.entity.User] is safe
[DEBUG] 2022-10-01 11:51:31.323 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.ericmclaughlin.entity.User
[DEBUG] 2022-10-01 11:51:32.538 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.ericmclaughlin.entity.Recipe] is safe
[DEBUG] 2022-10-01 11:51:32.538 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.ericmclaughlin.entity.Recipe
[DEBUG] 2022-10-01 11:51:32.538 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.ericmclaughlin.entity.Recipe] is safe
[DEBUG] 2022-10-01 11:51:32.539 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.ericmclaughlin.entity.Recipe
[DEBUG] 2022-10-01 11:51:32.581 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-01 11:51:32.582 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update recipes set user_cd=? where recipe_id=?
[DEBUG] 2022-10-01 11:51:32.582 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update recipes set  where recipe_id=?
[DEBUG] 2022-10-01 11:51:32.582 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update recipes set user_cd=null where user_cd=? and recipe_id=?
[DEBUG] 2022-10-01 11:51:32.582 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update recipes set user_cd=null where user_cd=?
[DEBUG] 2022-10-01 11:51:32.586 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.ericmclaughlin.entity.User
[DEBUG] 2022-10-01 11:51:32.586 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select user_id from user where user_id =?
[DEBUG] 2022-10-01 11:51:32.586 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.first_name as first_na2_1_, user_.last_name as last_nam3_1_, user_.password as password4_1_, user_.login_id as login_id5_1_ from user user_ where user_.user_id=?
[DEBUG] 2022-10-01 11:51:32.586 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into user (first_name, last_name, password, login_id, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2022-10-01 11:51:32.586 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update user set first_name=?, last_name=?, password=?, login_id=? where user_id=?
[DEBUG] 2022-10-01 11:51:32.586 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from user where user_id=?
[DEBUG] 2022-10-01 11:51:32.586 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into user (first_name, last_name, password, login_id) values (?, ?, ?, ?)
[DEBUG] 2022-10-01 11:51:32.615 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42835ff9]
[DEBUG] 2022-10-01 11:51:32.616 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2022-10-01 11:51:32.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2022-10-01 11:51:32.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-10-01 11:51:32.617 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2022-10-01 11:51:32.622 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ee73477]
[DEBUG] 2022-10-01 11:51:32.625 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33844fd2]
[DEBUG] 2022-10-01 11:51:32.627 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.description
[DEBUG] 2022-10-01 11:51:32.627 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.notes
[DEBUG] 2022-10-01 11:51:32.627 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.recipeName
[DEBUG] 2022-10-01 11:51:32.627 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2022-10-01 11:51:32.627 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2022-10-01 11:51:32.628 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2022-10-01 11:51:32.628 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-10-01 11:51:32.680 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-10-01 11:51:32.688 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.ericmclaughlin.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.ericmclaughlin.entity.User, querySpaceUid=<gen:0>, path=com.ericmclaughlin.entity.User)
          - CollectionAttributeFetchImpl(collection=com.ericmclaughlin.entity.User.recipes, querySpaceUid=<gen:1>, path=com.ericmclaughlin.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.ericmclaughlin.entity.Recipe, querySpaceUid=<gen:2>, path=com.ericmclaughlin.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.ericmclaughlin.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.ericmclaughlin.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_cd5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - recipe_i1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.ericmclaughlin.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {recipe_i1_0_2_}

[DEBUG] 2022-10-01 11:51:32.690 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.ericmclaughlin.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.password as password4_1_0_, user0_.login_id as login_id5_1_0_, recipes1_.user_cd as user_cd5_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.description as descript2_0_2_, recipes1_.notes as notes3_0_2_, recipes1_.recipe_name as recipe_n4_0_2_, recipes1_.user_cd as user_cd5_0_2_ from user user0_ left outer join recipes recipes1_ on user0_.user_id=recipes1_.user_cd where user0_.user_id=?
[DEBUG] 2022-10-01 11:51:32.690 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cca1a4f]
[DEBUG] 2022-10-01 11:51:32.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2022-10-01 11:51:32.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2022-10-01 11:51:32.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-10-01 11:51:32.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2022-10-01 11:51:32.691 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@627f8998]
[DEBUG] 2022-10-01 11:51:32.691 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4be2c73d]
[DEBUG] 2022-10-01 11:51:32.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.description
[DEBUG] 2022-10-01 11:51:32.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.notes
[DEBUG] 2022-10-01 11:51:32.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.recipeName
[DEBUG] 2022-10-01 11:51:32.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2022-10-01 11:51:32.691 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2022-10-01 11:51:32.692 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2022-10-01 11:51:32.692 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-10-01 11:51:32.692 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-10-01 11:51:32.692 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.ericmclaughlin.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.ericmclaughlin.entity.User, querySpaceUid=<gen:0>, path=com.ericmclaughlin.entity.User)
          - CollectionAttributeFetchImpl(collection=com.ericmclaughlin.entity.User.recipes, querySpaceUid=<gen:1>, path=com.ericmclaughlin.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.ericmclaughlin.entity.Recipe, querySpaceUid=<gen:2>, path=com.ericmclaughlin.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.ericmclaughlin.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.ericmclaughlin.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_cd5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - recipe_i1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.ericmclaughlin.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {recipe_i1_0_2_}

[DEBUG] 2022-10-01 11:51:32.693 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.ericmclaughlin.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.password as password4_1_0_, user0_.login_id as login_id5_1_0_, recipes1_.user_cd as user_cd5_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.description as descript2_0_2_, recipes1_.notes as notes3_0_2_, recipes1_.recipe_name as recipe_n4_0_2_, recipes1_.user_cd as user_cd5_0_2_ from user user0_ left outer join recipes recipes1_ on user0_.user_id=recipes1_.user_cd where user0_.user_id=?
[DEBUG] 2022-10-01 11:51:32.741 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.ericmclaughlin.entity.User: select user0_.user_id as user_id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.password as password4_1_1_, user0_.login_id as login_id5_1_1_, recipes1_.user_cd as user_cd5_0_3_, recipes1_.recipe_id as recipe_i1_0_3_, recipes1_.recipe_id as recipe_i1_0_0_, recipes1_.description as descript2_0_0_, recipes1_.notes as notes3_0_0_, recipes1_.recipe_name as recipe_n4_0_0_, recipes1_.user_cd as user_cd5_0_0_ from user user0_ left outer join recipes recipes1_ on user0_.user_id=recipes1_.user_cd where user0_.user_id=?
[DEBUG] 2022-10-01 11:51:32.742 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.ericmclaughlin.entity.User: select user0_.user_id as user_id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.password as password4_1_1_, user0_.login_id as login_id5_1_1_, recipes1_.user_cd as user_cd5_0_3_, recipes1_.recipe_id as recipe_i1_0_3_, recipes1_.recipe_id as recipe_i1_0_0_, recipes1_.description as descript2_0_0_, recipes1_.notes as notes3_0_0_, recipes1_.recipe_name as recipe_n4_0_0_, recipes1_.user_cd as user_cd5_0_0_ from user user0_ left outer join recipes recipes1_ on user0_.user_id=recipes1_.user_cd where user0_.user_id=?
[DEBUG] 2022-10-01 11:51:32.742 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.ericmclaughlin.entity.Recipe
[DEBUG] 2022-10-01 11:51:32.742 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select recipe_id from recipes where recipe_id =?
[DEBUG] 2022-10-01 11:51:32.742 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select recipe_.recipe_id, recipe_.description as descript2_0_, recipe_.notes as notes3_0_, recipe_.recipe_name as recipe_n4_0_, recipe_.user_cd as user_cd5_0_ from recipes recipe_ where recipe_.recipe_id=?
[DEBUG] 2022-10-01 11:51:32.742 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into recipes (description, notes, recipe_name, user_cd, recipe_id) values (?, ?, ?, ?, ?)
[DEBUG] 2022-10-01 11:51:32.743 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update recipes set description=?, notes=?, recipe_name=?, user_cd=? where recipe_id=?
[DEBUG] 2022-10-01 11:51:32.743 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from recipes where recipe_id=?
[DEBUG] 2022-10-01 11:51:32.743 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into recipes (description, notes, recipe_name, user_cd) values (?, ?, ?, ?)
[DEBUG] 2022-10-01 11:51:32.743 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2857d049]
[DEBUG] 2022-10-01 11:51:32.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-10-01 11:51:32.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2022-10-01 11:51:32.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipeName
[DEBUG] 2022-10-01 11:51:32.743 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2022-10-01 11:51:32.743 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f2ea5f]
[DEBUG] 2022-10-01 11:51:32.744 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2022-10-01 11:51:32.744 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2022-10-01 11:51:32.744 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2022-10-01 11:51:32.744 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2022-10-01 11:51:32.744 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2022-10-01 11:51:32.744 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2022-10-01 11:51:32.745 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-10-01 11:51:32.745 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-10-01 11:51:32.745 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.ericmclaughlin.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.ericmclaughlin.entity.Recipe, querySpaceUid=<gen:0>, path=com.ericmclaughlin.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.ericmclaughlin.entity.User, querySpaceUid=<gen:1>, path=com.ericmclaughlin.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.ericmclaughlin.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {recipe_i1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.ericmclaughlin.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}

[DEBUG] 2022-10-01 11:51:32.745 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.ericmclaughlin.entity.Recipe [NONE]: select recipe0_.recipe_id as recipe_i1_0_0_, recipe0_.description as descript2_0_0_, recipe0_.notes as notes3_0_0_, recipe0_.recipe_name as recipe_n4_0_0_, recipe0_.user_cd as user_cd5_0_0_, user1_.user_id as user_id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.password as password4_1_1_, user1_.login_id as login_id5_1_1_ from recipes recipe0_ left outer join user user1_ on recipe0_.user_cd=user1_.user_id where recipe0_.recipe_id=?
[DEBUG] 2022-10-01 11:51:32.746 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@228fc322]
[DEBUG] 2022-10-01 11:51:32.748 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-10-01 11:51:32.748 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2022-10-01 11:51:32.748 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipeName
[DEBUG] 2022-10-01 11:51:32.749 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2022-10-01 11:51:32.749 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67d6c53a]
[DEBUG] 2022-10-01 11:51:32.749 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2022-10-01 11:51:32.749 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2022-10-01 11:51:32.749 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2022-10-01 11:51:32.749 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2022-10-01 11:51:32.749 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2022-10-01 11:51:32.749 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2022-10-01 11:51:32.749 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-10-01 11:51:32.750 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-10-01 11:51:32.751 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.ericmclaughlin.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.ericmclaughlin.entity.Recipe, querySpaceUid=<gen:0>, path=com.ericmclaughlin.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.ericmclaughlin.entity.User, querySpaceUid=<gen:1>, path=com.ericmclaughlin.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.ericmclaughlin.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {recipe_i1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.ericmclaughlin.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}

[DEBUG] 2022-10-01 11:51:32.751 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.ericmclaughlin.entity.Recipe [READ]: select recipe0_.recipe_id as recipe_i1_0_0_, recipe0_.description as descript2_0_0_, recipe0_.notes as notes3_0_0_, recipe0_.recipe_name as recipe_n4_0_0_, recipe0_.user_cd as user_cd5_0_0_, user1_.user_id as user_id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.password as password4_1_1_, user1_.login_id as login_id5_1_1_ from recipes recipe0_ left outer join user user1_ on recipe0_.user_cd=user1_.user_id where recipe0_.recipe_id=?
[DEBUG] 2022-10-01 11:51:32.751 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.ericmclaughlin.entity.Recipe: select recipe0_.recipe_id as recipe_i1_0_0_, recipe0_.description as descript2_0_0_, recipe0_.notes as notes3_0_0_, recipe0_.recipe_name as recipe_n4_0_0_, recipe0_.user_cd as user_cd5_0_0_ from recipes recipe0_ where recipe0_.recipe_id=?
[DEBUG] 2022-10-01 11:51:32.751 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.ericmclaughlin.entity.Recipe: select recipe0_.recipe_id as recipe_i1_0_0_, recipe0_.description as descript2_0_0_, recipe0_.notes as notes3_0_0_, recipe0_.recipe_name as recipe_n4_0_0_, recipe0_.user_cd as user_cd5_0_0_ from recipes recipe0_ where recipe0_.recipe_id=?
[DEBUG] 2022-10-01 11:51:32.757 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c93dcc]
[DEBUG] 2022-10-01 11:51:32.759 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27cffca3]
[DEBUG] 2022-10-01 11:51:32.761 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-10-01 11:51:32.761 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2022-10-01 11:51:32.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipeName
[DEBUG] 2022-10-01 11:51:32.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2022-10-01 11:51:32.763 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2022-10-01 11:51:32.764 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-10-01 11:51:32.768 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-10-01 11:51:32.769 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.ericmclaughlin.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.ericmclaughlin.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.ericmclaughlin.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.ericmclaughlin.entity.Recipe, querySpaceUid=<gen:1>, path=[com.ericmclaughlin.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.ericmclaughlin.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_cd5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - recipe_i1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.ericmclaughlin.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {recipe_i1_0_1_}

[DEBUG] 2022-10-01 11:51:32.769 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.ericmclaughlin.entity.User.recipes: select recipes0_.user_cd as user_cd5_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.description as descript2_0_1_, recipes0_.notes as notes3_0_1_, recipes0_.recipe_name as recipe_n4_0_1_, recipes0_.user_cd as user_cd5_0_1_ from recipes recipes0_ where recipes0_.user_cd=?
[DEBUG] 2022-10-01 11:51:32.839 [http-nio-8080-exec-5] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2022-10-01 11:51:32.839 [http-nio-8080-exec-5] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-10-01 11:51:32.840 [http-nio-8080-exec-5] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-10-01 11:51:32.916 [http-nio-8080-exec-5] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-10-01 11:51:32.916 [http-nio-8080-exec-5] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-10-01 11:51:32.955 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-10-01 11:51:32.955 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-10-01 11:51:32.971 [http-nio-8080-exec-5] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@14a5c480
[DEBUG] 2022-10-01 11:51:32.973 [http-nio-8080-exec-5] SessionFactoryRegistry - Registering SessionFactory: 0ac72042-1489-408f-aa32-386c2243c7ca (<unnamed>)
[DEBUG] 2022-10-01 11:51:32.974 [http-nio-8080-exec-5] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-10-01 11:51:33.686 [http-nio-8080-exec-5] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-10-01 11:51:33.716 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2022-10-01 11:51:33.821 [http-nio-8080-exec-5] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@506cd933
[DEBUG] 2022-10-01 11:51:34.025 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.ericmclaughlin.entity.User as generatedAlias0
[DEBUG] 2022-10-01 11:51:34.070 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-10-01 11:51:34.108 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'ericmclaughlin'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2022-10-01 11:51:34.142 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2022-10-01 11:51:34.158 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : com.ericmclaughlin.entity.User (generatedAlias0) -> user0_
[DEBUG] 2022-10-01 11:51:34.159 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2022-10-01 11:51:34.160 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2022-10-01 11:51:34.161 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2022-10-01 11:51:34.294 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2022-10-01 11:51:34.294 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2022-10-01 11:51:34.295 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.ericmclaughlin.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.password as password4_1_, user0_.login_id as login_id5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.ericmclaughlin.entity.User}}

[DEBUG] 2022-10-01 11:51:34.295 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-10-01 11:51:34.313 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from com.ericmclaughlin.entity.User as generatedAlias0
[DEBUG] 2022-10-01 11:51:34.313 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.password as password4_1_, user0_.login_id as login_id5_1_ from user user0_
[DEBUG] 2022-10-01 11:51:34.314 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-10-01 11:51:34.447 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.password as password4_1_, user0_.login_id as login_id5_1_ from user user0_
[DEBUG] 2022-10-01 11:51:35.071 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2022-10-01 11:51:35.204 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.ericmclaughlin.entity.User#1]
[DEBUG] 2022-10-01 11:51:35.249 [http-nio-8080-exec-5] Loader - Result set row: 1
[DEBUG] 2022-10-01 11:51:35.249 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.ericmclaughlin.entity.User#2]
[DEBUG] 2022-10-01 11:51:35.249 [http-nio-8080-exec-5] Loader - Result set row: 2
[DEBUG] 2022-10-01 11:51:35.249 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.ericmclaughlin.entity.User#3]
[DEBUG] 2022-10-01 11:51:35.251 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.User#1]
[DEBUG] 2022-10-01 11:51:35.253 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Johnny
[DEBUG] 2022-10-01 11:51:35.253 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.253 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Cash
[DEBUG] 2022-10-01 11:51:35.253 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.253 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = CashJ
[DEBUG] 2022-10-01 11:51:35.253 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.253 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2022-10-01 11:51:35.253 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.260 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = CashJ
[DEBUG] 2022-10-01 11:51:35.260 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.288 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.User#1]
[DEBUG] 2022-10-01 11:51:35.288 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.User#2]
[DEBUG] 2022-10-01 11:51:35.288 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Peggy
[DEBUG] 2022-10-01 11:51:35.288 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.288 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Curbs
[DEBUG] 2022-10-01 11:51:35.288 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.288 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = CurbsP
[DEBUG] 2022-10-01 11:51:35.288 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.288 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2022-10-01 11:51:35.288 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.289 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = CurbsP
[DEBUG] 2022-10-01 11:51:35.289 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.289 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.User#2]
[DEBUG] 2022-10-01 11:51:35.289 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.User#3]
[DEBUG] 2022-10-01 11:51:35.289 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2022-10-01 11:51:35.289 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.289 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Hamelin
[DEBUG] 2022-10-01 11:51:35.289 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.289 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = HamelB
[DEBUG] 2022-10-01 11:51:35.289 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.290 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2022-10-01 11:51:35.290 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.290 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = HamelB
[DEBUG] 2022-10-01 11:51:35.290 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.290 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.User#3]
[DEBUG] 2022-10-01 11:51:35.365 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.ericmclaughlin.entity.User.recipes#3]
[DEBUG] 2022-10-01 11:51:35.366 [http-nio-8080-exec-5] SQL - select recipes0_.user_cd as user_cd5_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.description as descript2_0_1_, recipes0_.notes as notes3_0_1_, recipes0_.recipe_name as recipe_n4_0_1_, recipes0_.user_cd as user_cd5_0_1_ from recipes recipes0_ where recipes0_.user_cd=?
[DEBUG] 2022-10-01 11:51:35.484 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.ericmclaughlin.entity.User.recipes#3]
[DEBUG] 2022-10-01 11:51:35.544 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-10-01 11:51:35.547 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#3]
[DEBUG] 2022-10-01 11:51:35.653 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#3]
[DEBUG] 2022-10-01 11:51:35.653 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-01 11:51:35.654 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.654 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-01 11:51:35.654 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.654 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipeName` : value = Tacos
[DEBUG] 2022-10-01 11:51:35.654 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.654 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2022-10-01 11:51:35.654 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.654 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#3]
[DEBUG] 2022-10-01 11:51:35.655 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-01 11:51:35.655 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.ericmclaughlin.entity.User.recipes#3]
[DEBUG] 2022-10-01 11:51:35.655 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-01 11:51:35.655 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-10-01 11:51:35.655 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-10-01 11:51:35.655 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-01 11:51:35.656 [http-nio-8080-exec-5] SQL - select recipes0_.user_cd as user_cd5_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.description as descript2_0_1_, recipes0_.notes as notes3_0_1_, recipes0_.recipe_name as recipe_n4_0_1_, recipes0_.user_cd as user_cd5_0_1_ from recipes recipes0_ where recipes0_.user_cd=?
[DEBUG] 2022-10-01 11:51:35.657 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-01 11:51:35.657 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-10-01 11:51:35.657 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-01 11:51:35.658 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#2]
[DEBUG] 2022-10-01 11:51:35.658 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-01 11:51:35.658 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.658 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-01 11:51:35.658 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.658 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipeName` : value = Meatloaf
[DEBUG] 2022-10-01 11:51:35.658 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.658 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2022-10-01 11:51:35.658 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.658 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#2]
[DEBUG] 2022-10-01 11:51:35.658 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-01 11:51:35.658 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-01 11:51:35.658 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-01 11:51:35.659 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-10-01 11:51:35.659 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-10-01 11:51:35.659 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-01 11:51:35.659 [http-nio-8080-exec-5] SQL - select recipes0_.user_cd as user_cd5_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.description as descript2_0_1_, recipes0_.notes as notes3_0_1_, recipes0_.recipe_name as recipe_n4_0_1_, recipes0_.user_cd as user_cd5_0_1_ from recipes recipes0_ where recipes0_.user_cd=?
[DEBUG] 2022-10-01 11:51:35.660 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-01 11:51:35.660 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-10-01 11:51:35.660 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-01 11:51:35.661 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2022-10-01 11:51:35.661 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-01 11:51:35.661 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#1]
[DEBUG] 2022-10-01 11:51:35.661 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-01 11:51:35.661 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.662 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-01 11:51:35.662 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.662 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipeName` : value = Carrot Cake
[DEBUG] 2022-10-01 11:51:35.662 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.662 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2022-10-01 11:51:35.662 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#1]
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#4]
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipeName` : value = Creme Brulee
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#4]
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-01 11:51:35.663 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-10-01 11:51:35.664 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-10-01 11:51:35.683 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-10-01 11:51:51.533 [http-nio-8080-exec-7] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2022-10-01 11:51:51.537 [http-nio-8080-exec-7] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.ericmclaughlin.entity.User as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2022-10-01 11:51:51.539 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-10-01 11:51:51.540 [http-nio-8080-exec-7] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'ericmclaughlin'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'lastName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2022-10-01 11:51:51.540 [http-nio-8080-exec-7] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2022-10-01 11:51:51.540 [http-nio-8080-exec-7] FromElement - FromClause{level=1} : com.ericmclaughlin.entity.User (generatedAlias0) -> user0_
[DEBUG] 2022-10-01 11:51:51.540 [http-nio-8080-exec-7] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2022-10-01 11:51:51.542 [http-nio-8080-exec-7] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2022-10-01 11:51:51.543 [http-nio-8080-exec-7] DotNode - getDataType() : lastName -> org.hibernate.type.StringType@572914fe
[DEBUG] 2022-10-01 11:51:51.543 [http-nio-8080-exec-7] FromReferenceNode - Resolved : generatedAlias0.lastName -> user0_.last_name
[DEBUG] 2022-10-01 11:51:51.544 [http-nio-8080-exec-7] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2022-10-01 11:51:51.545 [http-nio-8080-exec-7] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.last_name user0_.user_id lastName ) ? ) ) )
[DEBUG] 2022-10-01 11:51:51.545 [http-nio-8080-exec-7] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2022-10-01 11:51:51.545 [http-nio-8080-exec-7] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2022-10-01 11:51:51.545 [http-nio-8080-exec-7] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.ericmclaughlin.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.password as password4_1_, user0_.login_id as login_id5_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.ericmclaughlin.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias0.lastName,tableAlias=user0_,className=com.ericmclaughlin.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=com.ericmclaughlin.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@572914fe}

[DEBUG] 2022-10-01 11:51:51.545 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-10-01 11:51:51.545 [http-nio-8080-exec-7] QueryTranslatorImpl - HQL: select generatedAlias0 from com.ericmclaughlin.entity.User as generatedAlias0 where generatedAlias0.lastName like :param0
[DEBUG] 2022-10-01 11:51:51.545 [http-nio-8080-exec-7] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.password as password4_1_, user0_.login_id as login_id5_1_ from user user0_ where user0_.last_name like ?
[DEBUG] 2022-10-01 11:51:51.546 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-10-01 11:51:51.553 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.password as password4_1_, user0_.login_id as login_id5_1_ from user user0_ where user0_.last_name like ?
[DEBUG] 2022-10-01 11:51:51.557 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2022-10-01 11:51:51.557 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.ericmclaughlin.entity.User#1]
[DEBUG] 2022-10-01 11:51:51.558 [http-nio-8080-exec-7] Loader - Result set row: 1
[DEBUG] 2022-10-01 11:51:51.558 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.ericmclaughlin.entity.User#2]
[DEBUG] 2022-10-01 11:51:51.558 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.User#1]
[DEBUG] 2022-10-01 11:51:51.558 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Johnny
[DEBUG] 2022-10-01 11:51:51.558 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.558 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Cash
[DEBUG] 2022-10-01 11:51:51.558 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.558 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = CashJ
[DEBUG] 2022-10-01 11:51:51.558 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.558 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2022-10-01 11:51:51.558 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.558 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `userName` : value = CashJ
[DEBUG] 2022-10-01 11:51:51.558 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.559 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.User#1]
[DEBUG] 2022-10-01 11:51:51.559 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.User#2]
[DEBUG] 2022-10-01 11:51:51.559 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Peggy
[DEBUG] 2022-10-01 11:51:51.559 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.559 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Curbs
[DEBUG] 2022-10-01 11:51:51.559 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.559 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = CurbsP
[DEBUG] 2022-10-01 11:51:51.559 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.559 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2022-10-01 11:51:51.559 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.559 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `userName` : value = CurbsP
[DEBUG] 2022-10-01 11:51:51.559 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.559 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.User#2]
[DEBUG] 2022-10-01 11:51:51.560 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-01 11:51:51.560 [http-nio-8080-exec-7] SQL - select recipes0_.user_cd as user_cd5_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.description as descript2_0_1_, recipes0_.notes as notes3_0_1_, recipes0_.recipe_name as recipe_n4_0_1_, recipes0_.user_cd as user_cd5_0_1_ from recipes recipes0_ where recipes0_.user_cd=?
[DEBUG] 2022-10-01 11:51:51.561 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-01 11:51:51.561 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-10-01 11:51:51.562 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-01 11:51:51.562 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#2]
[DEBUG] 2022-10-01 11:51:51.562 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-01 11:51:51.562 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.562 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-01 11:51:51.562 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.562 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipeName` : value = Meatloaf
[DEBUG] 2022-10-01 11:51:51.562 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.562 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2022-10-01 11:51:51.562 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.562 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#2]
[DEBUG] 2022-10-01 11:51:51.562 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-01 11:51:51.562 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-01 11:51:51.563 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-01 11:51:51.563 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-10-01 11:51:51.563 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-10-01 11:51:51.563 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-01 11:51:51.563 [http-nio-8080-exec-7] SQL - select recipes0_.user_cd as user_cd5_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.description as descript2_0_1_, recipes0_.notes as notes3_0_1_, recipes0_.recipe_name as recipe_n4_0_1_, recipes0_.user_cd as user_cd5_0_1_ from recipes recipes0_ where recipes0_.user_cd=?
[DEBUG] 2022-10-01 11:51:51.564 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-01 11:51:51.564 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-10-01 11:51:51.564 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-01 11:51:51.565 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2022-10-01 11:51:51.565 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-01 11:51:51.566 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#1]
[DEBUG] 2022-10-01 11:51:51.566 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-01 11:51:51.566 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.567 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-01 11:51:51.567 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.567 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipeName` : value = Carrot Cake
[DEBUG] 2022-10-01 11:51:51.567 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.569 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2022-10-01 11:51:51.570 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.570 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#1]
[DEBUG] 2022-10-01 11:51:51.570 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#4]
[DEBUG] 2022-10-01 11:51:51.570 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-01 11:51:51.570 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.570 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-01 11:51:51.570 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.570 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipeName` : value = Creme Brulee
[DEBUG] 2022-10-01 11:51:51.570 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.570 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2022-10-01 11:51:51.571 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-01 11:51:51.571 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#4]
[DEBUG] 2022-10-01 11:51:51.571 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-01 11:51:51.571 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-01 11:51:51.572 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-01 11:51:51.572 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-10-01 11:51:51.572 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-10-01 11:51:51.572 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
