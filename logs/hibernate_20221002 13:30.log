[DEBUG] 2022-10-02 13:30:38.027 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2022-10-02 13:30:38.035 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2022-10-02 13:30:38.039 [http-nio-8080-exec-5] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2022-10-02 13:30:38.112 [http-nio-8080-exec-5] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2022-10-02 13:30:38.113 [http-nio-8080-exec-5] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2022-10-02 13:30:38.275 [http-nio-8080-exec-5] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2022-10-02 13:30:38.276 [http-nio-8080-exec-5] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2022-10-02 13:30:38.278 [http-nio-8080-exec-5] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2022-10-02 13:30:38.638 [http-nio-8080-exec-5] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2022-10-02 13:30:38.690 [http-nio-8080-exec-5] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2022-10-02 13:30:38.691 [http-nio-8080-exec-5] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2022-10-02 13:30:38.719 [http-nio-8080-exec-5] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2022-10-02 13:30:38.761 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6f4818d3
[DEBUG] 2022-10-02 13:30:38.761 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6f4818d3
[DEBUG] 2022-10-02 13:30:38.763 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6f4818d3
[DEBUG] 2022-10-02 13:30:38.763 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4892e316
[DEBUG] 2022-10-02 13:30:38.764 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@41931ce2
[DEBUG] 2022-10-02 13:30:38.764 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3b5a9c87
[DEBUG] 2022-10-02 13:30:38.765 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5fafdb6c
[DEBUG] 2022-10-02 13:30:38.765 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5fafdb6c
[DEBUG] 2022-10-02 13:30:38.766 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5fafdb6c
[DEBUG] 2022-10-02 13:30:38.767 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@65482ed3
[DEBUG] 2022-10-02 13:30:38.767 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@65482ed3
[DEBUG] 2022-10-02 13:30:38.767 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65482ed3
[DEBUG] 2022-10-02 13:30:38.769 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@274580e0
[DEBUG] 2022-10-02 13:30:38.769 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@274580e0
[DEBUG] 2022-10-02 13:30:38.769 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@274580e0
[DEBUG] 2022-10-02 13:30:38.770 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5c1b19c8
[DEBUG] 2022-10-02 13:30:38.770 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5c1b19c8
[DEBUG] 2022-10-02 13:30:38.771 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5c1b19c8
[DEBUG] 2022-10-02 13:30:38.772 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2980029a
[DEBUG] 2022-10-02 13:30:38.772 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2980029a
[DEBUG] 2022-10-02 13:30:38.772 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2980029a
[DEBUG] 2022-10-02 13:30:38.773 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6e0c1f6e
[DEBUG] 2022-10-02 13:30:38.773 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6e0c1f6e
[DEBUG] 2022-10-02 13:30:38.773 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6e0c1f6e
[DEBUG] 2022-10-02 13:30:38.774 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@f440d6f
[DEBUG] 2022-10-02 13:30:38.775 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@f440d6f
[DEBUG] 2022-10-02 13:30:38.775 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@f440d6f
[DEBUG] 2022-10-02 13:30:38.776 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@73b28339
[DEBUG] 2022-10-02 13:30:38.776 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@73b28339
[DEBUG] 2022-10-02 13:30:38.780 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@40f2c093
[DEBUG] 2022-10-02 13:30:38.780 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@40f2c093
[DEBUG] 2022-10-02 13:30:38.781 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@e9122de
[DEBUG] 2022-10-02 13:30:38.783 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@e9122de
[DEBUG] 2022-10-02 13:30:38.785 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@24bf3649
[DEBUG] 2022-10-02 13:30:38.786 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2a1938c3
[DEBUG] 2022-10-02 13:30:38.787 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5566646b
[DEBUG] 2022-10-02 13:30:38.787 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5566646b
[DEBUG] 2022-10-02 13:30:38.789 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@63132eaa
[DEBUG] 2022-10-02 13:30:38.789 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63132eaa
[DEBUG] 2022-10-02 13:30:38.796 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2304e9a0
[DEBUG] 2022-10-02 13:30:38.796 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2304e9a0
[DEBUG] 2022-10-02 13:30:38.798 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@8abb4b9
[DEBUG] 2022-10-02 13:30:38.798 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@8abb4b9
[DEBUG] 2022-10-02 13:30:38.800 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4682c64b
[DEBUG] 2022-10-02 13:30:38.800 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4682c64b
[DEBUG] 2022-10-02 13:30:38.802 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5e2c74cf
[DEBUG] 2022-10-02 13:30:38.803 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5e2c74cf
[DEBUG] 2022-10-02 13:30:38.805 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56e85aaf
[DEBUG] 2022-10-02 13:30:38.805 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56e85aaf
[DEBUG] 2022-10-02 13:30:38.807 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@49761c2e
[DEBUG] 2022-10-02 13:30:38.807 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@49761c2e
[DEBUG] 2022-10-02 13:30:38.809 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4366ca62
[DEBUG] 2022-10-02 13:30:38.810 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4366ca62
[DEBUG] 2022-10-02 13:30:38.814 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@54256b4e
[DEBUG] 2022-10-02 13:30:38.814 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@54256b4e
[DEBUG] 2022-10-02 13:30:38.818 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@72d617b
[DEBUG] 2022-10-02 13:30:38.819 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@72d617b
[DEBUG] 2022-10-02 13:30:38.820 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2f1a49e9
[DEBUG] 2022-10-02 13:30:38.820 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2f1a49e9
[DEBUG] 2022-10-02 13:30:38.821 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2f1a49e9
[DEBUG] 2022-10-02 13:30:38.823 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@f1a2aa6
[DEBUG] 2022-10-02 13:30:38.825 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5925b303
[DEBUG] 2022-10-02 13:30:38.826 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5925b303
[DEBUG] 2022-10-02 13:30:38.826 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5925b303
[DEBUG] 2022-10-02 13:30:38.827 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2eb667a
[DEBUG] 2022-10-02 13:30:38.829 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@412bb50
[DEBUG] 2022-10-02 13:30:38.830 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@412bb50
[DEBUG] 2022-10-02 13:30:38.831 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@10e1910b
[DEBUG] 2022-10-02 13:30:38.831 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@10e1910b
[DEBUG] 2022-10-02 13:30:38.832 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@47326f1a
[DEBUG] 2022-10-02 13:30:38.832 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@47326f1a
[DEBUG] 2022-10-02 13:30:38.833 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@29a0d6e4
[DEBUG] 2022-10-02 13:30:38.833 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@29a0d6e4
[DEBUG] 2022-10-02 13:30:38.834 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@f0211f1
[DEBUG] 2022-10-02 13:30:38.835 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@f0211f1
[DEBUG] 2022-10-02 13:30:38.835 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4dc3de3b
[DEBUG] 2022-10-02 13:30:38.836 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@18a10a79
[DEBUG] 2022-10-02 13:30:38.836 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@18a10a79
[DEBUG] 2022-10-02 13:30:38.836 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@18a10a79
[DEBUG] 2022-10-02 13:30:38.837 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4aa1fb1c
[DEBUG] 2022-10-02 13:30:38.837 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4aa1fb1c
[DEBUG] 2022-10-02 13:30:38.837 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4aa1fb1c
[DEBUG] 2022-10-02 13:30:38.838 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@59272032
[DEBUG] 2022-10-02 13:30:38.839 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@46036065
[DEBUG] 2022-10-02 13:30:38.840 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1ac1ebdb
[DEBUG] 2022-10-02 13:30:38.840 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1ac1ebdb
[DEBUG] 2022-10-02 13:30:38.840 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1ac1ebdb
[DEBUG] 2022-10-02 13:30:38.841 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c5f5a3f
[DEBUG] 2022-10-02 13:30:38.841 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c5f5a3f
[DEBUG] 2022-10-02 13:30:38.841 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c5f5a3f
[DEBUG] 2022-10-02 13:30:38.842 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@59617fcb
[DEBUG] 2022-10-02 13:30:38.842 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@26bad951
[DEBUG] 2022-10-02 13:30:38.846 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@431556c1
[DEBUG] 2022-10-02 13:30:38.846 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@431556c1
[DEBUG] 2022-10-02 13:30:38.847 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@563e1a9b
[DEBUG] 2022-10-02 13:30:38.849 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5159f67f
[DEBUG] 2022-10-02 13:30:38.850 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5159f67f
[DEBUG] 2022-10-02 13:30:38.852 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@19624d2d
[DEBUG] 2022-10-02 13:30:38.853 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19624d2d
[DEBUG] 2022-10-02 13:30:38.853 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7ac1eb29
[DEBUG] 2022-10-02 13:30:38.854 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4fe506af
[DEBUG] 2022-10-02 13:30:38.856 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7a6facbf
[DEBUG] 2022-10-02 13:30:38.859 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@65048c60
[DEBUG] 2022-10-02 13:30:38.859 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@65048c60
[DEBUG] 2022-10-02 13:30:38.860 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6dad0b7c
[DEBUG] 2022-10-02 13:30:38.860 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@436b39bd
[DEBUG] 2022-10-02 13:30:38.860 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3b0e9a88
[DEBUG] 2022-10-02 13:30:38.860 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@485ed395
[DEBUG] 2022-10-02 13:30:38.863 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4d2dc709
[DEBUG] 2022-10-02 13:30:38.864 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5791a9c0
[DEBUG] 2022-10-02 13:30:38.864 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1804b360
[DEBUG] 2022-10-02 13:30:38.864 [http-nio-8080-exec-5] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2678198e
[DEBUG] 2022-10-02 13:30:38.902 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2022-10-02 13:30:38.902 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2022-10-02 13:30:38.903 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-10-02 13:30:38.903 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2022-10-02 13:30:38.903 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2022-10-02 13:30:38.904 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2022-10-02 13:30:38.905 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2022-10-02 13:30:38.906 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-10-02 13:30:38.907 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2022-10-02 13:30:38.907 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2022-10-02 13:30:38.908 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2022-10-02 13:30:38.908 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2022-10-02 13:30:38.908 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2022-10-02 13:30:38.909 [http-nio-8080-exec-5] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2022-10-02 13:30:38.919 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/RecipeTracker
[INFO ] 2022-10-02 13:30:38.919 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2022-10-02 13:30:38.919 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2022-10-02 13:30:39.051 [http-nio-8080-exec-5] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2022-10-02 13:30:39.614 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2022-10-02 13:30:39.615 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.22 (Revision: d64b664fa93e81296a377de031b8123a67e6def2)
      major : 8
      minor : 0
[DEBUG] 2022-10-02 13:30:39.615 [http-nio-8080-exec-5] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2022-10-02 13:30:39.666 [http-nio-8080-exec-5] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2022-10-02 13:30:39.687 [http-nio-8080-exec-5] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2022-10-02 13:30:39.729 [http-nio-8080-exec-5] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2022-10-02 13:30:39.781 [http-nio-8080-exec-5] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2022-10-02 13:30:39.786 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62bb817] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d09c2cd]
[DEBUG] 2022-10-02 13:30:39.849 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.ericmclaughlin.entity.Recipe
[DEBUG] 2022-10-02 13:30:39.875 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-10-02 13:30:39.884 [http-nio-8080-exec-5] EntityBinder - Import with entity name Recipe
[DEBUG] 2022-10-02 13:30:39.888 [http-nio-8080-exec-5] EntityBinder - Bind entity com.ericmclaughlin.entity.Recipe on table recipes
[DEBUG] 2022-10-02 13:30:39.918 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=recipe_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:39.924 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property recipeId with lazy=false
[DEBUG] 2022-10-02 13:30:39.926 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.Recipe:recipeId]
[DEBUG] 2022-10-02 13:30:39.930 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for recipeId
[DEBUG] 2022-10-02 13:30:39.933 [http-nio-8080-exec-5] PropertyBinder - Building property recipeId
[DEBUG] 2022-10-02 13:30:39.938 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(recipe_id)]), recipeId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2022-10-02 13:30:39.941 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:39.941 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2022-10-02 13:30:39.941 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.Recipe:description]
[DEBUG] 2022-10-02 13:30:39.941 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2022-10-02 13:30:39.941 [http-nio-8080-exec-5] PropertyBinder - Building property description
[DEBUG] 2022-10-02 13:30:39.942 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=notes, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:39.942 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property notes with lazy=false
[DEBUG] 2022-10-02 13:30:39.942 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.Recipe:notes]
[DEBUG] 2022-10-02 13:30:39.942 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for notes
[DEBUG] 2022-10-02 13:30:39.942 [http-nio-8080-exec-5] PropertyBinder - Building property notes
[DEBUG] 2022-10-02 13:30:39.943 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=recipe_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:39.943 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property recipeName with lazy=false
[DEBUG] 2022-10-02 13:30:39.943 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.Recipe:recipeName]
[DEBUG] 2022-10-02 13:30:39.943 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for recipeName
[DEBUG] 2022-10-02 13:30:39.944 [http-nio-8080-exec-5] PropertyBinder - Building property recipeName
[DEBUG] 2022-10-02 13:30:39.947 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_cd', referencedColumn='', mappedBy=''}
[DEBUG] 2022-10-02 13:30:39.947 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:39.953 [http-nio-8080-exec-5] PropertyBinder - Building property user
[DEBUG] 2022-10-02 13:30:39.955 [http-nio-8080-exec-5] AnnotationBinder - Binding entity from annotated class: com.ericmclaughlin.entity.User
[DEBUG] 2022-10-02 13:30:39.956 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2022-10-02 13:30:39.956 [http-nio-8080-exec-5] EntityBinder - Import with entity name User
[DEBUG] 2022-10-02 13:30:39.956 [http-nio-8080-exec-5] EntityBinder - Bind entity com.ericmclaughlin.entity.User on table user
[DEBUG] 2022-10-02 13:30:39.962 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:39.962 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2022-10-02 13:30:39.962 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.User:userId]
[DEBUG] 2022-10-02 13:30:39.962 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2022-10-02 13:30:39.962 [http-nio-8080-exec-5] PropertyBinder - Building property userId
[DEBUG] 2022-10-02 13:30:39.963 [http-nio-8080-exec-5] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2022-10-02 13:30:39.963 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:39.963 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2022-10-02 13:30:39.963 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.User:firstName]
[DEBUG] 2022-10-02 13:30:39.963 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2022-10-02 13:30:39.963 [http-nio-8080-exec-5] PropertyBinder - Building property firstName
[DEBUG] 2022-10-02 13:30:39.964 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:39.964 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2022-10-02 13:30:39.964 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.User:lastName]
[DEBUG] 2022-10-02 13:30:39.964 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2022-10-02 13:30:39.964 [http-nio-8080-exec-5] PropertyBinder - Building property lastName
[DEBUG] 2022-10-02 13:30:39.964 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:39.964 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2022-10-02 13:30:39.965 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.User:password]
[DEBUG] 2022-10-02 13:30:39.965 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2022-10-02 13:30:39.965 [http-nio-8080-exec-5] PropertyBinder - Building property password
[DEBUG] 2022-10-02 13:30:39.965 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2022-10-02 13:30:39.965 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:39.968 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:40.001 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:40.002 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:40.003 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2022-10-02 13:30:40.004 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2022-10-02 13:30:40.004 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2022-10-02 13:30:40.009 [http-nio-8080-exec-5] CollectionBinder - Collection role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:40.016 [http-nio-8080-exec-5] PropertyBinder - Building property recipes
[DEBUG] 2022-10-02 13:30:40.016 [http-nio-8080-exec-5] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=login_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2022-10-02 13:30:40.018 [http-nio-8080-exec-5] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2022-10-02 13:30:40.018 [http-nio-8080-exec-5] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.ericmclaughlin.entity.User:userName]
[DEBUG] 2022-10-02 13:30:40.018 [http-nio-8080-exec-5] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2022-10-02 13:30:40.018 [http-nio-8080-exec-5] PropertyBinder - Building property userName
[DEBUG] 2022-10-02 13:30:40.021 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for recipeId
[DEBUG] 2022-10-02 13:30:40.021 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2022-10-02 13:30:40.021 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for notes
[DEBUG] 2022-10-02 13:30:40.022 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for recipeName
[DEBUG] 2022-10-02 13:30:40.023 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2022-10-02 13:30:40.023 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2022-10-02 13:30:40.023 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2022-10-02 13:30:40.023 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2022-10-02 13:30:40.023 [http-nio-8080-exec-5] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2022-10-02 13:30:40.031 [http-nio-8080-exec-5] PrimaryKey - Forcing column [recipe_id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2022-10-02 13:30:40.031 [http-nio-8080-exec-5] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2022-10-02 13:30:40.031 [http-nio-8080-exec-5] CollectionSecondPass - Second pass for collection: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:40.032 [http-nio-8080-exec-5] CollectionBinder - Binding a OneToMany: com.ericmclaughlin.entity.User.recipes through a foreign key
[DEBUG] 2022-10-02 13:30:40.033 [http-nio-8080-exec-5] CollectionBinder - Mapping collection: com.ericmclaughlin.entity.User.recipes -> recipes
[DEBUG] 2022-10-02 13:30:40.034 [http-nio-8080-exec-5] TableBinder - Retrieving property com.ericmclaughlin.entity.Recipe.user
[DEBUG] 2022-10-02 13:30:40.035 [http-nio-8080-exec-5] CollectionSecondPass - Mapped collection key: user_cd, one-to-many: com.ericmclaughlin.entity.Recipe
[DEBUG] 2022-10-02 13:30:40.035 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.ericmclaughlin.entity.User
[DEBUG] 2022-10-02 13:30:40.037 [http-nio-8080-exec-5] InFlightMetadataCollectorImpl - Resolving reference to class: com.ericmclaughlin.entity.User
[DEBUG] 2022-10-02 13:30:40.080 [http-nio-8080-exec-5] SessionFactoryImpl - Building session factory
[DEBUG] 2022-10-02 13:30:40.081 [http-nio-8080-exec-5] Settings - SessionFactory name : null
[DEBUG] 2022-10-02 13:30:40.081 [http-nio-8080-exec-5] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2022-10-02 13:30:40.081 [http-nio-8080-exec-5] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2022-10-02 13:30:40.081 [http-nio-8080-exec-5] Settings - Statistics: disabled
[DEBUG] 2022-10-02 13:30:40.081 [http-nio-8080-exec-5] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2022-10-02 13:30:40.081 [http-nio-8080-exec-5] Settings - Default entity-mode: pojo
[DEBUG] 2022-10-02 13:30:40.081 [http-nio-8080-exec-5] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2022-10-02 13:30:40.082 [http-nio-8080-exec-5] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2022-10-02 13:30:40.082 [http-nio-8080-exec-5] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2022-10-02 13:30:40.082 [http-nio-8080-exec-5] Settings - Default batch fetch size: -1
[DEBUG] 2022-10-02 13:30:40.082 [http-nio-8080-exec-5] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2022-10-02 13:30:40.082 [http-nio-8080-exec-5] Settings - Default null ordering: NONE
[DEBUG] 2022-10-02 13:30:40.082 [http-nio-8080-exec-5] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2022-10-02 13:30:40.083 [http-nio-8080-exec-5] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2022-10-02 13:30:40.084 [http-nio-8080-exec-5] Settings - multi-tenancy strategy : NONE
[DEBUG] 2022-10-02 13:30:40.086 [http-nio-8080-exec-5] Settings - JTA Track by Thread: enabled
[DEBUG] 2022-10-02 13:30:40.087 [http-nio-8080-exec-5] Settings - Query language substitutions: {}
[DEBUG] 2022-10-02 13:30:40.089 [http-nio-8080-exec-5] Settings - Named query checking : enabled
[DEBUG] 2022-10-02 13:30:40.089 [http-nio-8080-exec-5] Settings - Second-level cache: disabled
[DEBUG] 2022-10-02 13:30:40.090 [http-nio-8080-exec-5] Settings - Second-level query cache: disabled
[DEBUG] 2022-10-02 13:30:40.090 [http-nio-8080-exec-5] Settings - Second-level query cache factory: null
[DEBUG] 2022-10-02 13:30:40.090 [http-nio-8080-exec-5] Settings - Second-level cache region prefix: null
[DEBUG] 2022-10-02 13:30:40.090 [http-nio-8080-exec-5] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2022-10-02 13:30:40.090 [http-nio-8080-exec-5] Settings - Structured second-level cache entries: disabled
[DEBUG] 2022-10-02 13:30:40.091 [http-nio-8080-exec-5] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2022-10-02 13:30:40.091 [http-nio-8080-exec-5] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2022-10-02 13:30:40.091 [http-nio-8080-exec-5] Settings - JDBC batch size: 15
[DEBUG] 2022-10-02 13:30:40.091 [http-nio-8080-exec-5] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2022-10-02 13:30:40.091 [http-nio-8080-exec-5] Settings - Scrollable result sets: enabled
[DEBUG] 2022-10-02 13:30:40.092 [http-nio-8080-exec-5] Settings - Wrap result sets: disabled
[DEBUG] 2022-10-02 13:30:40.092 [http-nio-8080-exec-5] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2022-10-02 13:30:40.092 [http-nio-8080-exec-5] Settings - JDBC result set fetch size: null
[DEBUG] 2022-10-02 13:30:40.092 [http-nio-8080-exec-5] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2022-10-02 13:30:40.092 [http-nio-8080-exec-5] Settings - Generate SQL with comments: disabled
[DEBUG] 2022-10-02 13:30:40.092 [http-nio-8080-exec-5] Settings - JPA compliance - query : 
[DEBUG] 2022-10-02 13:30:40.092 [http-nio-8080-exec-5] Settings - JPA compliance - closed-handling : 
[DEBUG] 2022-10-02 13:30:40.092 [http-nio-8080-exec-5] Settings - JPA compliance - lists : 
[DEBUG] 2022-10-02 13:30:40.092 [http-nio-8080-exec-5] Settings - JPA compliance - transactions : 
[INFO ] 2022-10-02 13:30:40.172 [http-nio-8080-exec-5] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2022-10-02 13:30:40.203 [http-nio-8080-exec-5] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2022-10-02 13:30:40.203 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming, java.version.date=2022-07-19, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, com.sun.management.jmxremote.password.file=/home/student/.cache/JetBrains/IntelliJIdea2022.2/tomcat/468a916e-ca92-405c-8032-b38cf9b60bb8/jmxremote.password, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., jdk.tls.ephemeralDHKeySize=2048, server.loader=, java.util.logging.config.file=/home/student/.cache/JetBrains/IntelliJIdea2022.2/tomcat/468a916e-ca92-405c-8032-b38cf9b60bb8/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, com.sun.management.jmxremote.access.file=/home/student/.cache/JetBrains/IntelliJIdea2022.2/tomcat/468a916e-ca92-405c-8032-b38cf9b60bb8/jmxremote.access, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.16+8-post-Ubuntu-0ubuntu120.04, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, user.name=student, path.separator=:, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.4.0-126-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/RecipeTracker, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, catalina.home=/home/student/tomcat, com.sun.management.jmxremote.port=1099, java.version=11.0.16, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,derby-*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,ha-api-*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jaxws-rt-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, user.dir=/home/student/tomcat/bin, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, catalina.base=/home/student/.cache/JetBrains/IntelliJIdea2022.2/tomcat/468a916e-ca92-405c-8032-b38cf9b60bb8, shared.loader=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@68597fbe, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.16+8-post-Ubuntu-0ubuntu120.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, connection.url=jdbc:mysql://localhost:3306/RecipeTracker, java.class.version=55.0}
[DEBUG] 2022-10-02 13:30:40.229 [http-nio-8080-exec-5] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2022-10-02 13:30:40.229 [http-nio-8080-exec-5] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2022-10-02 13:30:40.230 [http-nio-8080-exec-5] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2022-10-02 13:30:40.230 [http-nio-8080-exec-5] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62bb817] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@284600bc]
[DEBUG] 2022-10-02 13:30:40.291 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.ericmclaughlin.entity.User] is safe
[DEBUG] 2022-10-02 13:30:40.291 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.ericmclaughlin.entity.User
[DEBUG] 2022-10-02 13:30:40.313 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.ericmclaughlin.entity.User] is safe
[DEBUG] 2022-10-02 13:30:40.313 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.ericmclaughlin.entity.User
[DEBUG] 2022-10-02 13:30:40.591 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.ericmclaughlin.entity.Recipe] is safe
[DEBUG] 2022-10-02 13:30:40.591 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.ericmclaughlin.entity.Recipe
[DEBUG] 2022-10-02 13:30:40.592 [http-nio-8080-exec-5] ClassLoaderAccessImpl - Not known whether passed class name [com.ericmclaughlin.entity.Recipe] is safe
[DEBUG] 2022-10-02 13:30:40.592 [http-nio-8080-exec-5] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.ericmclaughlin.entity.Recipe
[DEBUG] 2022-10-02 13:30:40.625 [http-nio-8080-exec-5] AbstractCollectionPersister - Static SQL for collection: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:40.625 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row insert: update recipes set user_cd=? where recipe_id=?
[DEBUG] 2022-10-02 13:30:40.625 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row update: update recipes set  where recipe_id=?
[DEBUG] 2022-10-02 13:30:40.625 [http-nio-8080-exec-5] AbstractCollectionPersister -  Row delete: update recipes set user_cd=null where user_cd=? and recipe_id=?
[DEBUG] 2022-10-02 13:30:40.625 [http-nio-8080-exec-5] AbstractCollectionPersister -  One-shot delete: update recipes set user_cd=null where user_cd=?
[DEBUG] 2022-10-02 13:30:40.630 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.ericmclaughlin.entity.User
[DEBUG] 2022-10-02 13:30:40.630 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select user_id from user where user_id =?
[DEBUG] 2022-10-02 13:30:40.630 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.first_name as first_na2_1_, user_.last_name as last_nam3_1_, user_.password as password4_1_, user_.login_id as login_id5_1_ from user user_ where user_.user_id=?
[DEBUG] 2022-10-02 13:30:40.630 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into user (first_name, last_name, password, login_id, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2022-10-02 13:30:40.630 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update user set first_name=?, last_name=?, password=?, login_id=? where user_id=?
[DEBUG] 2022-10-02 13:30:40.630 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from user where user_id=?
[DEBUG] 2022-10-02 13:30:40.630 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into user (first_name, last_name, password, login_id) values (?, ?, ?, ?)
[DEBUG] 2022-10-02 13:30:40.658 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7268b38]
[DEBUG] 2022-10-02 13:30:40.659 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2022-10-02 13:30:40.659 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2022-10-02 13:30:40.660 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-10-02 13:30:40.660 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2022-10-02 13:30:40.664 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d663e4d]
[DEBUG] 2022-10-02 13:30:40.668 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18d7ee30]
[DEBUG] 2022-10-02 13:30:40.670 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.description
[DEBUG] 2022-10-02 13:30:40.670 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.notes
[DEBUG] 2022-10-02 13:30:40.670 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.recipeName
[DEBUG] 2022-10-02 13:30:40.670 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2022-10-02 13:30:40.670 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2022-10-02 13:30:40.671 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2022-10-02 13:30:40.671 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-10-02 13:30:40.691 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-10-02 13:30:40.698 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.ericmclaughlin.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.ericmclaughlin.entity.User, querySpaceUid=<gen:0>, path=com.ericmclaughlin.entity.User)
          - CollectionAttributeFetchImpl(collection=com.ericmclaughlin.entity.User.recipes, querySpaceUid=<gen:1>, path=com.ericmclaughlin.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.ericmclaughlin.entity.Recipe, querySpaceUid=<gen:2>, path=com.ericmclaughlin.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.ericmclaughlin.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.ericmclaughlin.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_cd5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - recipe_i1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.ericmclaughlin.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {recipe_i1_0_2_}

[DEBUG] 2022-10-02 13:30:40.700 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.ericmclaughlin.entity.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.password as password4_1_0_, user0_.login_id as login_id5_1_0_, recipes1_.user_cd as user_cd5_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.description as descript2_0_2_, recipes1_.notes as notes3_0_2_, recipes1_.recipe_name as recipe_n4_0_2_, recipes1_.user_cd as user_cd5_0_2_ from user user0_ left outer join recipes recipes1_ on user0_.user_id=recipes1_.user_cd where user0_.user_id=?
[DEBUG] 2022-10-02 13:30:40.700 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3038c5ce]
[DEBUG] 2022-10-02 13:30:40.700 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2022-10-02 13:30:40.700 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2022-10-02 13:30:40.700 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2022-10-02 13:30:40.700 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2022-10-02 13:30:40.700 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cca1a4f]
[DEBUG] 2022-10-02 13:30:40.701 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@149f3870]
[DEBUG] 2022-10-02 13:30:40.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.description
[DEBUG] 2022-10-02 13:30:40.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.notes
[DEBUG] 2022-10-02 13:30:40.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.recipeName
[DEBUG] 2022-10-02 13:30:40.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2022-10-02 13:30:40.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2022-10-02 13:30:40.701 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2022-10-02 13:30:40.701 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-10-02 13:30:40.701 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-10-02 13:30:40.702 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.ericmclaughlin.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.ericmclaughlin.entity.User, querySpaceUid=<gen:0>, path=com.ericmclaughlin.entity.User)
          - CollectionAttributeFetchImpl(collection=com.ericmclaughlin.entity.User.recipes, querySpaceUid=<gen:1>, path=com.ericmclaughlin.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.ericmclaughlin.entity.Recipe, querySpaceUid=<gen:2>, path=com.ericmclaughlin.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.ericmclaughlin.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.ericmclaughlin.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_cd5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - recipe_i1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.ericmclaughlin.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {recipe_i1_0_2_}

[DEBUG] 2022-10-02 13:30:40.702 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.ericmclaughlin.entity.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.password as password4_1_0_, user0_.login_id as login_id5_1_0_, recipes1_.user_cd as user_cd5_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.description as descript2_0_2_, recipes1_.notes as notes3_0_2_, recipes1_.recipe_name as recipe_n4_0_2_, recipes1_.user_cd as user_cd5_0_2_ from user user0_ left outer join recipes recipes1_ on user0_.user_id=recipes1_.user_cd where user0_.user_id=?
[DEBUG] 2022-10-02 13:30:40.720 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.ericmclaughlin.entity.User: select user0_.user_id as user_id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.password as password4_1_1_, user0_.login_id as login_id5_1_1_, recipes1_.user_cd as user_cd5_0_3_, recipes1_.recipe_id as recipe_i1_0_3_, recipes1_.recipe_id as recipe_i1_0_0_, recipes1_.description as descript2_0_0_, recipes1_.notes as notes3_0_0_, recipes1_.recipe_name as recipe_n4_0_0_, recipes1_.user_cd as user_cd5_0_0_ from user user0_ left outer join recipes recipes1_ on user0_.user_id=recipes1_.user_cd where user0_.user_id=?
[DEBUG] 2022-10-02 13:30:40.721 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.ericmclaughlin.entity.User: select user0_.user_id as user_id1_1_1_, user0_.first_name as first_na2_1_1_, user0_.last_name as last_nam3_1_1_, user0_.password as password4_1_1_, user0_.login_id as login_id5_1_1_, recipes1_.user_cd as user_cd5_0_3_, recipes1_.recipe_id as recipe_i1_0_3_, recipes1_.recipe_id as recipe_i1_0_0_, recipes1_.description as descript2_0_0_, recipes1_.notes as notes3_0_0_, recipes1_.recipe_name as recipe_n4_0_0_, recipes1_.user_cd as user_cd5_0_0_ from user user0_ left outer join recipes recipes1_ on user0_.user_id=recipes1_.user_cd where user0_.user_id=?
[DEBUG] 2022-10-02 13:30:40.721 [http-nio-8080-exec-5] AbstractEntityPersister - Static SQL for entity: com.ericmclaughlin.entity.Recipe
[DEBUG] 2022-10-02 13:30:40.721 [http-nio-8080-exec-5] AbstractEntityPersister -  Version select: select recipe_id from recipes where recipe_id =?
[DEBUG] 2022-10-02 13:30:40.721 [http-nio-8080-exec-5] AbstractEntityPersister -  Snapshot select: select recipe_.recipe_id, recipe_.description as descript2_0_, recipe_.notes as notes3_0_, recipe_.recipe_name as recipe_n4_0_, recipe_.user_cd as user_cd5_0_ from recipes recipe_ where recipe_.recipe_id=?
[DEBUG] 2022-10-02 13:30:40.721 [http-nio-8080-exec-5] AbstractEntityPersister -  Insert 0: insert into recipes (description, notes, recipe_name, user_cd, recipe_id) values (?, ?, ?, ?, ?)
[DEBUG] 2022-10-02 13:30:40.721 [http-nio-8080-exec-5] AbstractEntityPersister -  Update 0: update recipes set description=?, notes=?, recipe_name=?, user_cd=? where recipe_id=?
[DEBUG] 2022-10-02 13:30:40.722 [http-nio-8080-exec-5] AbstractEntityPersister -  Delete 0: delete from recipes where recipe_id=?
[DEBUG] 2022-10-02 13:30:40.722 [http-nio-8080-exec-5] AbstractEntityPersister -  Identity insert: insert into recipes (description, notes, recipe_name, user_cd) values (?, ?, ?, ?)
[DEBUG] 2022-10-02 13:30:40.722 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d466c0]
[DEBUG] 2022-10-02 13:30:40.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-10-02 13:30:40.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2022-10-02 13:30:40.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipeName
[DEBUG] 2022-10-02 13:30:40.722 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2022-10-02 13:30:40.722 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2857d049]
[DEBUG] 2022-10-02 13:30:40.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2022-10-02 13:30:40.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2022-10-02 13:30:40.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2022-10-02 13:30:40.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2022-10-02 13:30:40.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2022-10-02 13:30:40.723 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2022-10-02 13:30:40.723 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-10-02 13:30:40.723 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-10-02 13:30:40.724 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.ericmclaughlin.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.ericmclaughlin.entity.Recipe, querySpaceUid=<gen:0>, path=com.ericmclaughlin.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.ericmclaughlin.entity.User, querySpaceUid=<gen:1>, path=com.ericmclaughlin.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.ericmclaughlin.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {recipe_i1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.ericmclaughlin.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}

[DEBUG] 2022-10-02 13:30:40.724 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.ericmclaughlin.entity.Recipe [NONE]: select recipe0_.recipe_id as recipe_i1_0_0_, recipe0_.description as descript2_0_0_, recipe0_.notes as notes3_0_0_, recipe0_.recipe_name as recipe_n4_0_0_, recipe0_.user_cd as user_cd5_0_0_, user1_.user_id as user_id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.password as password4_1_1_, user1_.login_id as login_id5_1_1_ from recipes recipe0_ left outer join user user1_ on recipe0_.user_cd=user1_.user_id where recipe0_.recipe_id=?
[DEBUG] 2022-10-02 13:30:40.724 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e30f04b]
[DEBUG] 2022-10-02 13:30:40.724 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-10-02 13:30:40.724 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2022-10-02 13:30:40.724 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipeName
[DEBUG] 2022-10-02 13:30:40.724 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2022-10-02 13:30:40.724 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@228fc322]
[DEBUG] 2022-10-02 13:30:40.724 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2022-10-02 13:30:40.724 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2022-10-02 13:30:40.724 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2022-10-02 13:30:40.725 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2022-10-02 13:30:40.725 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2022-10-02 13:30:40.725 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2022-10-02 13:30:40.725 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-10-02 13:30:40.725 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-10-02 13:30:40.725 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(entity=com.ericmclaughlin.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.ericmclaughlin.entity.Recipe, querySpaceUid=<gen:0>, path=com.ericmclaughlin.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.ericmclaughlin.entity.User, querySpaceUid=<gen:1>, path=com.ericmclaughlin.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.ericmclaughlin.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {recipe_i1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.ericmclaughlin.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_1_1_}

[DEBUG] 2022-10-02 13:30:40.725 [http-nio-8080-exec-5] EntityLoader - Static select for entity com.ericmclaughlin.entity.Recipe [READ]: select recipe0_.recipe_id as recipe_i1_0_0_, recipe0_.description as descript2_0_0_, recipe0_.notes as notes3_0_0_, recipe0_.recipe_name as recipe_n4_0_0_, recipe0_.user_cd as user_cd5_0_0_, user1_.user_id as user_id1_1_1_, user1_.first_name as first_na2_1_1_, user1_.last_name as last_nam3_1_1_, user1_.password as password4_1_1_, user1_.login_id as login_id5_1_1_ from recipes recipe0_ left outer join user user1_ on recipe0_.user_cd=user1_.user_id where recipe0_.recipe_id=?
[DEBUG] 2022-10-02 13:30:40.725 [http-nio-8080-exec-5] Loader - Static select for action ACTION_MERGE on entity com.ericmclaughlin.entity.Recipe: select recipe0_.recipe_id as recipe_i1_0_0_, recipe0_.description as descript2_0_0_, recipe0_.notes as notes3_0_0_, recipe0_.recipe_name as recipe_n4_0_0_, recipe0_.user_cd as user_cd5_0_0_ from recipes recipe0_ where recipe0_.recipe_id=?
[DEBUG] 2022-10-02 13:30:40.726 [http-nio-8080-exec-5] Loader - Static select for action ACTION_REFRESH on entity com.ericmclaughlin.entity.Recipe: select recipe0_.recipe_id as recipe_i1_0_0_, recipe0_.description as descript2_0_0_, recipe0_.notes as notes3_0_0_, recipe0_.recipe_name as recipe_n4_0_0_, recipe0_.user_cd as user_cd5_0_0_ from recipes recipe0_ where recipe0_.recipe_id=?
[DEBUG] 2022-10-02 13:30:40.730 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4dd44bcb]
[DEBUG] 2022-10-02 13:30:40.730 [http-nio-8080-exec-5] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63551a99]
[DEBUG] 2022-10-02 13:30:40.730 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2022-10-02 13:30:40.731 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : notes
[DEBUG] 2022-10-02 13:30:40.731 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : recipeName
[DEBUG] 2022-10-02 13:30:40.731 [http-nio-8080-exec-5] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2022-10-02 13:30:40.731 [http-nio-8080-exec-5] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2022-10-02 13:30:40.731 [http-nio-8080-exec-5] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2022-10-02 13:30:40.733 [http-nio-8080-exec-5] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2022-10-02 13:30:40.733 [http-nio-8080-exec-5] LoadPlanTreePrinter - LoadPlan(collection=com.ericmclaughlin.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.ericmclaughlin.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.ericmclaughlin.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.ericmclaughlin.entity.Recipe, querySpaceUid=<gen:1>, path=[com.ericmclaughlin.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.ericmclaughlin.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_cd5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - recipe_i1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.ericmclaughlin.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {recipe_i1_0_1_}

[DEBUG] 2022-10-02 13:30:40.734 [http-nio-8080-exec-5] CollectionLoader - Static select for collection com.ericmclaughlin.entity.User.recipes: select recipes0_.user_cd as user_cd5_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.description as descript2_0_1_, recipes0_.notes as notes3_0_1_, recipes0_.recipe_name as recipe_n4_0_1_, recipes0_.user_cd as user_cd5_0_1_ from recipes recipes0_ where recipes0_.user_cd=?
[DEBUG] 2022-10-02 13:30:40.769 [http-nio-8080-exec-5] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2022-10-02 13:30:40.769 [http-nio-8080-exec-5] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2022-10-02 13:30:40.770 [http-nio-8080-exec-5] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2022-10-02 13:30:40.777 [http-nio-8080-exec-5] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2022-10-02 13:30:40.778 [http-nio-8080-exec-5] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2022-10-02 13:30:40.779 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2022-10-02 13:30:40.779 [http-nio-8080-exec-5] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2022-10-02 13:30:40.783 [http-nio-8080-exec-5] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2d1bc42c
[DEBUG] 2022-10-02 13:30:40.785 [http-nio-8080-exec-5] SessionFactoryRegistry - Registering SessionFactory: 914e17dc-0f1d-4236-9f23-2fe273de0131 (<unnamed>)
[DEBUG] 2022-10-02 13:30:40.785 [http-nio-8080-exec-5] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2022-10-02 13:30:40.861 [http-nio-8080-exec-5] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2022-10-02 13:30:40.889 [http-nio-8080-exec-5] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0
[DEBUG] 2022-10-02 13:30:40.905 [http-nio-8080-exec-5] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5791dce5
[DEBUG] 2022-10-02 13:30:40.933 [http-nio-8080-exec-5] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.ericmclaughlin.entity.Recipe as generatedAlias0
[DEBUG] 2022-10-02 13:30:40.940 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-10-02 13:30:40.946 [http-nio-8080-exec-5] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'ericmclaughlin'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Recipe'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2022-10-02 13:30:40.967 [http-nio-8080-exec-5] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2022-10-02 13:30:40.982 [http-nio-8080-exec-5] FromElement - FromClause{level=1} : com.ericmclaughlin.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2022-10-02 13:30:40.983 [http-nio-8080-exec-5] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.recipe_id
[DEBUG] 2022-10-02 13:30:40.984 [http-nio-8080-exec-5] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2022-10-02 13:30:40.985 [http-nio-8080-exec-5] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.recipe_id ) ( FromClause{level=1} recipes recipe0_ ) )
[DEBUG] 2022-10-02 13:30:40.994 [http-nio-8080-exec-5] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2022-10-02 13:30:40.994 [http-nio-8080-exec-5] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2022-10-02 13:30:40.994 [http-nio-8080-exec-5] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.recipe_id as recipe_i1_0_' {alias=generatedAlias0, className=com.ericmclaughlin.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.description as descript2_0_, recipe0_.notes as notes3_0_, recipe0_.recipe_name as recipe_n4_0_, recipe0_.user_cd as user_cd5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.ericmclaughlin.entity.Recipe}}

[DEBUG] 2022-10-02 13:30:40.994 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-10-02 13:30:41.000 [http-nio-8080-exec-5] QueryTranslatorImpl - HQL: select generatedAlias0 from com.ericmclaughlin.entity.Recipe as generatedAlias0
[DEBUG] 2022-10-02 13:30:41.000 [http-nio-8080-exec-5] QueryTranslatorImpl - SQL: select recipe0_.recipe_id as recipe_i1_0_, recipe0_.description as descript2_0_, recipe0_.notes as notes3_0_, recipe0_.recipe_name as recipe_n4_0_, recipe0_.user_cd as user_cd5_0_ from recipes recipe0_
[DEBUG] 2022-10-02 13:30:41.000 [http-nio-8080-exec-5] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-10-02 13:30:41.013 [http-nio-8080-exec-5] SQL - select recipe0_.recipe_id as recipe_i1_0_, recipe0_.description as descript2_0_, recipe0_.notes as notes3_0_, recipe0_.recipe_name as recipe_n4_0_, recipe0_.user_cd as user_cd5_0_ from recipes recipe0_
[DEBUG] 2022-10-02 13:30:41.033 [http-nio-8080-exec-5] Loader - Result set row: 0
[DEBUG] 2022-10-02 13:30:41.036 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.ericmclaughlin.entity.Recipe#1]
[DEBUG] 2022-10-02 13:30:41.043 [http-nio-8080-exec-5] Loader - Result set row: 1
[DEBUG] 2022-10-02 13:30:41.043 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.ericmclaughlin.entity.Recipe#2]
[DEBUG] 2022-10-02 13:30:41.044 [http-nio-8080-exec-5] Loader - Result set row: 2
[DEBUG] 2022-10-02 13:30:41.044 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.ericmclaughlin.entity.Recipe#3]
[DEBUG] 2022-10-02 13:30:41.044 [http-nio-8080-exec-5] Loader - Result set row: 3
[DEBUG] 2022-10-02 13:30:41.044 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.ericmclaughlin.entity.Recipe#4]
[DEBUG] 2022-10-02 13:30:41.044 [http-nio-8080-exec-5] Loader - Result set row: 4
[DEBUG] 2022-10-02 13:30:41.044 [http-nio-8080-exec-5] Loader - Result row: EntityKey[com.ericmclaughlin.entity.Recipe#19]
[DEBUG] 2022-10-02 13:30:41.046 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#1]
[DEBUG] 2022-10-02 13:30:41.047 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-02 13:30:41.048 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.048 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-02 13:30:41.048 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.048 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipeName` : value = Carrot Cake
[DEBUG] 2022-10-02 13:30:41.048 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.048 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2022-10-02 13:30:41.048 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.054 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.password as password4_1_0_, user0_.login_id as login_id5_1_0_, recipes1_.user_cd as user_cd5_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.description as descript2_0_2_, recipes1_.notes as notes3_0_2_, recipes1_.recipe_name as recipe_n4_0_2_, recipes1_.user_cd as user_cd5_0_2_ from user user0_ left outer join recipes recipes1_ on user0_.user_id=recipes1_.user_cd where user0_.user_id=?
[DEBUG] 2022-10-02 13:30:41.058 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-10-02 13:30:41.059 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-10-02 13:30:41.060 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-02 13:30:41.066 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2022-10-02 13:30:41.067 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-10-02 13:30:41.067 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-02 13:30:41.067 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.User#1]
[DEBUG] 2022-10-02 13:30:41.067 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Johnny
[DEBUG] 2022-10-02 13:30:41.067 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.067 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Cash
[DEBUG] 2022-10-02 13:30:41.067 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.067 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = CashJ
[DEBUG] 2022-10-02 13:30:41.067 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.067 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2022-10-02 13:30:41.067 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.068 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = CashJ
[DEBUG] 2022-10-02 13:30:41.068 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.068 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.User#1]
[DEBUG] 2022-10-02 13:30:41.069 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:41.071 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-02 13:30:41.071 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:41.071 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-10-02 13:30:41.072 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.ericmclaughlin.entity.User#1
[DEBUG] 2022-10-02 13:30:41.072 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#1]
[DEBUG] 2022-10-02 13:30:41.072 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#2]
[DEBUG] 2022-10-02 13:30:41.072 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-02 13:30:41.072 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.072 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-02 13:30:41.072 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.072 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipeName` : value = Meatloaf
[DEBUG] 2022-10-02 13:30:41.072 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.072 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2022-10-02 13:30:41.072 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.073 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.password as password4_1_0_, user0_.login_id as login_id5_1_0_, recipes1_.user_cd as user_cd5_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.description as descript2_0_2_, recipes1_.notes as notes3_0_2_, recipes1_.recipe_name as recipe_n4_0_2_, recipes1_.user_cd as user_cd5_0_2_ from user user0_ left outer join recipes recipes1_ on user0_.user_id=recipes1_.user_cd where user0_.user_id=?
[DEBUG] 2022-10-02 13:30:41.074 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-10-02 13:30:41.074 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-10-02 13:30:41.075 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-02 13:30:41.075 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.User#2]
[DEBUG] 2022-10-02 13:30:41.075 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Peggy
[DEBUG] 2022-10-02 13:30:41.075 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.075 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Curbs
[DEBUG] 2022-10-02 13:30:41.075 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.075 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = CurbsP
[DEBUG] 2022-10-02 13:30:41.075 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.075 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2022-10-02 13:30:41.075 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.075 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = CurbsP
[DEBUG] 2022-10-02 13:30:41.075 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.075 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.User#2]
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.ericmclaughlin.entity.User#2
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#2]
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#3]
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipeName` : value = Tacos
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2022-10-02 13:30:41.076 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.077 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.password as password4_1_0_, user0_.login_id as login_id5_1_0_, recipes1_.user_cd as user_cd5_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.description as descript2_0_2_, recipes1_.notes as notes3_0_2_, recipes1_.recipe_name as recipe_n4_0_2_, recipes1_.user_cd as user_cd5_0_2_ from user user0_ left outer join recipes recipes1_ on user0_.user_id=recipes1_.user_cd where user0_.user_id=?
[DEBUG] 2022-10-02 13:30:41.078 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-10-02 13:30:41.078 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-10-02 13:30:41.078 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#3]
[DEBUG] 2022-10-02 13:30:41.079 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.User#3]
[DEBUG] 2022-10-02 13:30:41.079 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2022-10-02 13:30:41.079 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.079 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Hamelin
[DEBUG] 2022-10-02 13:30:41.079 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.079 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = HamelB
[DEBUG] 2022-10-02 13:30:41.079 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.079 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2022-10-02 13:30:41.079 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.079 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = HamelB
[DEBUG] 2022-10-02 13:30:41.079 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.080 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.User#3]
[DEBUG] 2022-10-02 13:30:41.080 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:41.080 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.ericmclaughlin.entity.User.recipes#3]
[DEBUG] 2022-10-02 13:30:41.080 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:41.080 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-10-02 13:30:41.080 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.ericmclaughlin.entity.User#3
[DEBUG] 2022-10-02 13:30:41.080 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#3]
[DEBUG] 2022-10-02 13:30:41.080 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#4]
[DEBUG] 2022-10-02 13:30:41.080 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-02 13:30:41.080 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.080 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-02 13:30:41.080 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipeName` : value = Creme Brulee
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#4]
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#19]
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `description` : value = Pudding made with whole milk and rice
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `notes` : value = Delicious!
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipeName` : value = Rice Pudding
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 18
[DEBUG] 2022-10-02 13:30:41.081 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.082 [http-nio-8080-exec-5] SQL - select user0_.user_id as user_id1_1_0_, user0_.first_name as first_na2_1_0_, user0_.last_name as last_nam3_1_0_, user0_.password as password4_1_0_, user0_.login_id as login_id5_1_0_, recipes1_.user_cd as user_cd5_0_1_, recipes1_.recipe_id as recipe_i1_0_1_, recipes1_.recipe_id as recipe_i1_0_2_, recipes1_.description as descript2_0_2_, recipes1_.notes as notes3_0_2_, recipes1_.recipe_name as recipe_n4_0_2_, recipes1_.user_cd as user_cd5_0_2_ from user user0_ left outer join recipes recipes1_ on user0_.user_id=recipes1_.user_cd where user0_.user_id=?
[DEBUG] 2022-10-02 13:30:41.083 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-10-02 13:30:41.083 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2022-10-02 13:30:41.083 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#18]
[DEBUG] 2022-10-02 13:30:41.084 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.User#18]
[DEBUG] 2022-10-02 13:30:41.084 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Bill
[DEBUG] 2022-10-02 13:30:41.084 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.084 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Nye
[DEBUG] 2022-10-02 13:30:41.084 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.085 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `password` : value = NyeB
[DEBUG] 2022-10-02 13:30:41.085 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.085 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2022-10-02 13:30:41.085 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.085 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = NyeB
[DEBUG] 2022-10-02 13:30:41.085 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:41.085 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.User#18]
[DEBUG] 2022-10-02 13:30:41.085 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:41.086 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.ericmclaughlin.entity.User.recipes#18]
[DEBUG] 2022-10-02 13:30:41.086 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:41.086 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-10-02 13:30:41.086 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.ericmclaughlin.entity.User#18
[DEBUG] 2022-10-02 13:30:41.086 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#19]
[DEBUG] 2022-10-02 13:30:41.088 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2022-10-02 13:30:53.812 [http-nio-8080-exec-7] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2022-10-02 13:30:53.814 [http-nio-8080-exec-7] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.ericmclaughlin.entity.User as generatedAlias0
[DEBUG] 2022-10-02 13:30:53.815 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-10-02 13:30:53.816 [http-nio-8080-exec-7] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'ericmclaughlin'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2022-10-02 13:30:53.816 [http-nio-8080-exec-7] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2022-10-02 13:30:53.816 [http-nio-8080-exec-7] FromElement - FromClause{level=1} : com.ericmclaughlin.entity.User (generatedAlias0) -> user0_
[DEBUG] 2022-10-02 13:30:53.817 [http-nio-8080-exec-7] FromReferenceNode - Resolved : generatedAlias0 -> user0_.user_id
[DEBUG] 2022-10-02 13:30:53.817 [http-nio-8080-exec-7] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2022-10-02 13:30:53.817 [http-nio-8080-exec-7] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2022-10-02 13:30:53.817 [http-nio-8080-exec-7] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2022-10-02 13:30:53.817 [http-nio-8080-exec-7] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2022-10-02 13:30:53.817 [http-nio-8080-exec-7] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_1_' {alias=generatedAlias0, className=com.ericmclaughlin.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.password as password4_1_, user0_.login_id as login_id5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.ericmclaughlin.entity.User}}

[DEBUG] 2022-10-02 13:30:53.817 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-10-02 13:30:53.817 [http-nio-8080-exec-7] QueryTranslatorImpl - HQL: select generatedAlias0 from com.ericmclaughlin.entity.User as generatedAlias0
[DEBUG] 2022-10-02 13:30:53.817 [http-nio-8080-exec-7] QueryTranslatorImpl - SQL: select user0_.user_id as user_id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.password as password4_1_, user0_.login_id as login_id5_1_ from user user0_
[DEBUG] 2022-10-02 13:30:53.817 [http-nio-8080-exec-7] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2022-10-02 13:30:53.818 [http-nio-8080-exec-7] SQL - select user0_.user_id as user_id1_1_, user0_.first_name as first_na2_1_, user0_.last_name as last_nam3_1_, user0_.password as password4_1_, user0_.login_id as login_id5_1_ from user user0_
[DEBUG] 2022-10-02 13:30:53.821 [http-nio-8080-exec-7] Loader - Result set row: 0
[DEBUG] 2022-10-02 13:30:53.821 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.ericmclaughlin.entity.User#1]
[DEBUG] 2022-10-02 13:30:53.821 [http-nio-8080-exec-7] Loader - Result set row: 1
[DEBUG] 2022-10-02 13:30:53.821 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.ericmclaughlin.entity.User#2]
[DEBUG] 2022-10-02 13:30:53.822 [http-nio-8080-exec-7] Loader - Result set row: 2
[DEBUG] 2022-10-02 13:30:53.822 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.ericmclaughlin.entity.User#3]
[DEBUG] 2022-10-02 13:30:53.822 [http-nio-8080-exec-7] Loader - Result set row: 3
[DEBUG] 2022-10-02 13:30:53.822 [http-nio-8080-exec-7] Loader - Result row: EntityKey[com.ericmclaughlin.entity.User#18]
[DEBUG] 2022-10-02 13:30:53.822 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.User#1]
[DEBUG] 2022-10-02 13:30:53.822 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Johnny
[DEBUG] 2022-10-02 13:30:53.822 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.823 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Cash
[DEBUG] 2022-10-02 13:30:53.823 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.823 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = CashJ
[DEBUG] 2022-10-02 13:30:53.823 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.823 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2022-10-02 13:30:53.823 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.823 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `userName` : value = CashJ
[DEBUG] 2022-10-02 13:30:53.823 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.823 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.User#1]
[DEBUG] 2022-10-02 13:30:53.823 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.User#2]
[DEBUG] 2022-10-02 13:30:53.823 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Peggy
[DEBUG] 2022-10-02 13:30:53.824 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.824 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Curbs
[DEBUG] 2022-10-02 13:30:53.824 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.824 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = CurbsP
[DEBUG] 2022-10-02 13:30:53.824 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.824 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2022-10-02 13:30:53.824 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.824 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `userName` : value = CurbsP
[DEBUG] 2022-10-02 13:30:53.825 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.825 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.User#2]
[DEBUG] 2022-10-02 13:30:53.825 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.User#3]
[DEBUG] 2022-10-02 13:30:53.825 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2022-10-02 13:30:53.825 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.825 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Hamelin
[DEBUG] 2022-10-02 13:30:53.825 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.825 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = HamelB
[DEBUG] 2022-10-02 13:30:53.826 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.826 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2022-10-02 13:30:53.826 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.826 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `userName` : value = HamelB
[DEBUG] 2022-10-02 13:30:53.826 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.826 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.User#3]
[DEBUG] 2022-10-02 13:30:53.826 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.User#18]
[DEBUG] 2022-10-02 13:30:53.826 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `firstName` : value = Bill
[DEBUG] 2022-10-02 13:30:53.826 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.826 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `lastName` : value = Nye
[DEBUG] 2022-10-02 13:30:53.826 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.826 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `password` : value = NyeB
[DEBUG] 2022-10-02 13:30:53.827 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.827 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2022-10-02 13:30:53.827 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.827 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `userName` : value = NyeB
[DEBUG] 2022-10-02 13:30:53.827 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.827 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.User#18]
[DEBUG] 2022-10-02 13:30:53.839 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.ericmclaughlin.entity.User.recipes#18]
[DEBUG] 2022-10-02 13:30:53.839 [http-nio-8080-exec-7] SQL - select recipes0_.user_cd as user_cd5_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.description as descript2_0_1_, recipes0_.notes as notes3_0_1_, recipes0_.recipe_name as recipe_n4_0_1_, recipes0_.user_cd as user_cd5_0_1_ from recipes recipes0_ where recipes0_.user_cd=?
[DEBUG] 2022-10-02 13:30:53.841 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [com.ericmclaughlin.entity.User.recipes#18]
[DEBUG] 2022-10-02 13:30:53.841 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-10-02 13:30:53.842 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#18]
[DEBUG] 2022-10-02 13:30:53.842 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#19]
[DEBUG] 2022-10-02 13:30:53.842 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = Pudding made with whole milk and rice
[DEBUG] 2022-10-02 13:30:53.842 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.843 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `notes` : value = Delicious!
[DEBUG] 2022-10-02 13:30:53.843 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.843 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipeName` : value = Rice Pudding
[DEBUG] 2022-10-02 13:30:53.844 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.844 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 18
[DEBUG] 2022-10-02 13:30:53.844 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.844 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#19]
[DEBUG] 2022-10-02 13:30:53.844 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:53.844 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.ericmclaughlin.entity.User.recipes#18]
[DEBUG] 2022-10-02 13:30:53.844 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:53.844 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-10-02 13:30:53.844 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-10-02 13:30:53.844 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.ericmclaughlin.entity.User.recipes#3]
[DEBUG] 2022-10-02 13:30:53.844 [http-nio-8080-exec-7] SQL - select recipes0_.user_cd as user_cd5_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.description as descript2_0_1_, recipes0_.notes as notes3_0_1_, recipes0_.recipe_name as recipe_n4_0_1_, recipes0_.user_cd as user_cd5_0_1_ from recipes recipes0_ where recipes0_.user_cd=?
[DEBUG] 2022-10-02 13:30:53.847 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [com.ericmclaughlin.entity.User.recipes#3]
[DEBUG] 2022-10-02 13:30:53.847 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-10-02 13:30:53.847 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#3]
[DEBUG] 2022-10-02 13:30:53.847 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#3]
[DEBUG] 2022-10-02 13:30:53.847 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-02 13:30:53.847 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.847 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-02 13:30:53.847 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.847 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipeName` : value = Tacos
[DEBUG] 2022-10-02 13:30:53.848 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.848 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2022-10-02 13:30:53.848 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.848 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#3]
[DEBUG] 2022-10-02 13:30:53.848 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:53.848 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.ericmclaughlin.entity.User.recipes#3]
[DEBUG] 2022-10-02 13:30:53.848 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:53.848 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-10-02 13:30:53.848 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-10-02 13:30:53.851 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-02 13:30:53.851 [http-nio-8080-exec-7] SQL - select recipes0_.user_cd as user_cd5_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.description as descript2_0_1_, recipes0_.notes as notes3_0_1_, recipes0_.recipe_name as recipe_n4_0_1_, recipes0_.user_cd as user_cd5_0_1_ from recipes recipes0_ where recipes0_.user_cd=?
[DEBUG] 2022-10-02 13:30:53.853 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-02 13:30:53.853 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-10-02 13:30:53.854 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-02 13:30:53.854 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#2]
[DEBUG] 2022-10-02 13:30:53.854 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-02 13:30:53.854 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.854 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-02 13:30:53.855 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.855 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipeName` : value = Meatloaf
[DEBUG] 2022-10-02 13:30:53.855 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.855 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2022-10-02 13:30:53.855 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.855 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#2]
[DEBUG] 2022-10-02 13:30:53.855 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:53.856 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.ericmclaughlin.entity.User.recipes#2]
[DEBUG] 2022-10-02 13:30:53.856 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:53.856 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-10-02 13:30:53.856 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-10-02 13:30:53.856 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-02 13:30:53.856 [http-nio-8080-exec-7] SQL - select recipes0_.user_cd as user_cd5_0_0_, recipes0_.recipe_id as recipe_i1_0_0_, recipes0_.recipe_id as recipe_i1_0_1_, recipes0_.description as descript2_0_1_, recipes0_.notes as notes3_0_1_, recipes0_.recipe_name as recipe_n4_0_1_, recipes0_.user_cd as user_cd5_0_1_ from recipes recipes0_ where recipes0_.user_cd=?
[DEBUG] 2022-10-02 13:30:53.858 [http-nio-8080-exec-7] ResultSetProcessorImpl - Preparing collection initializer : [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-02 13:30:53.858 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2022-10-02 13:30:53.859 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-02 13:30:53.859 [http-nio-8080-exec-7] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2022-10-02 13:30:53.859 [http-nio-8080-exec-7] CollectionReferenceInitializerImpl - Found row of collection: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-02 13:30:53.859 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#1]
[DEBUG] 2022-10-02 13:30:53.859 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipeName` : value = Carrot Cake
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#1]
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Resolving attributes for [com.ericmclaughlin.entity.Recipe#4]
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `description` : value = null
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `notes` : value = null
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`notes`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `recipeName` : value = Creme Brulee
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`recipeName`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.860 [http-nio-8080-exec-7] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2022-10-02 13:30:53.861 [http-nio-8080-exec-7] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2022-10-02 13:30:53.861 [http-nio-8080-exec-7] TwoPhaseLoad - Done materializing entity [com.ericmclaughlin.entity.Recipe#4]
[DEBUG] 2022-10-02 13:30:53.861 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections were found in result set for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:53.861 [http-nio-8080-exec-7] CollectionLoadContext - Collection fully initialized: [com.ericmclaughlin.entity.User.recipes#1]
[DEBUG] 2022-10-02 13:30:53.861 [http-nio-8080-exec-7] CollectionLoadContext - 1 collections initialized for role: com.ericmclaughlin.entity.User.recipes
[DEBUG] 2022-10-02 13:30:53.861 [http-nio-8080-exec-7] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2022-10-02 13:30:53.861 [http-nio-8080-exec-7] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2022-10-02 13:30:53.861 [http-nio-8080-exec-7] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
